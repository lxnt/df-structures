<data-definition>
    <struct-type type-name='activity_info'>
        <int32_t name='unk1' comment='uninitialized'/>
        <pointer name='person1' type-name='unit' comment='diplomat'/>
        <pointer name='person2' type-name='unit' comment='count'/>
        <pointer name='place' type-name='building'/>
        <int16_t name='unk2' comment='1'/>
        <int8_t name='unk3' comment='3'/>
        <int16_t name='unk4' comment='0'/>
        <int32_t name='unk5' comment='-1'/>
    </struct-type>

    <struct-type type-name='meeting_diplomat_info'>
        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int16_t name='unk1'/>
        <int32_t name='diplomat_id' ref-target='historical_figure'/>
        <int32_t name='unk2' comment='-1'/>
        <stl-vector name="unk_10"/>
        <stl-vector name="unk_20"/>
        <int32_t name="unk_30"/>
        <int32_t name="unk_34"/>
        <pointer name="dipscript" type-name="dipscript_info"/>
        <int32_t name="unk_3c"/>
        <stl-vector name="unk_40"/>
        <stl-string name="unk_50"/>
        <stl-string name="unk_6c"/>
        <int32_t name="unk_88"/>
        <stl-vector name="unk_8c"/>
        <stl-vector name="unk_9c"/>
        <stl-vector name="unk_ac"/>
        <stl-vector name="unk_bc"/>
        <stl-vector name="unk_cc"/>
        <stl-vector name="unk_dc"/>
        <stl-vector name="unk_ec"/>
        <stl-vector name="unk_fc"/>
        <stl-vector name="unk_10c"/>
    </struct-type>

    <struct-type type-name='pet_info'>
        <int32_t name='unk0' comment='uninitialized'/>
        <int32_t name='unk1' comment='-1'/>
        <int32_t name='pet_id' ref-target='unit'/>
        <compound name='name' type-name='language_name'/>
        <code-helper name='describe'>(describe-obj $.name)</code-helper>
        <int32_t name='unk3'/>
        <int32_t name='owner_id' ref-target='unit'/>
    </struct-type>

    <struct-type type-name='party_info'>
        <stl-vector name="units">
            <pointer type-name="unit"/>
        </stl-vector>
        <pointer name="location" type-name="building"/>
        <int32_t name="timer" comment='-1 per 10'/>
    </struct-type>

    <struct-type type-name='room_rent_info'>
        <stl-vector name='elements'>
            <pointer type-name='building'/>
        </stl-vector>
        <int32_t name='rent_value'/>
        <int32_t init-value='0'/>
    </struct-type>

    <struct-type type-name='activity_entry' instance-vector='$global.world.activities.all' key-field='id'>
        <int32_t name='id'/>
        <int16_t name='is_individual'/>
        <stl-vector name='events'>
            <pointer type-name='activity_event'/>
        </stl-vector>
        <int32_t name='next_event_id'/>
    </struct-type>

    <enum-type type-name='activity_event_type'>
        <enum-item name='TrainingSession'/>
        <enum-item name='CombatTraining'/>
        <enum-item name='SkillDemonstration'/>
        <enum-item name='IndividualSkillDrill'/>
        <enum-item name='Sparring'/>
        <enum-item name='RangedPractice'/>
    </enum-type>

    <struct-type type-name='activity_event_participants'>
        <stl-vector name='histfigs'>
            <int32_t ref-target='historical_figure'/>
        </stl-vector>
        <stl-vector name='units'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        -- Seemingly units that are free to be grouped
        -- away into subevents or sparring pairs.
        <stl-vector name='free_histfigs'>
            <int32_t ref-target='historical_figure'/>
        </stl-vector>
        <stl-vector name='free_units'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        -- Holder event
        <int32_t name='activity_id' ref-target='activity_entry'/>
        <int32_t name='event_id'/>
    </struct-type>

    <class-type type-name='activity_event' original-name='activity_eventst'>
        <int32_t name='event_id'
                 comment='mostly, but not always, the index in activity.events'/>
        <int32_t name='activity_id' ref-target='activity_entry'/>

        <code-helper name='find-instance'>
            (let ((activity (find-instance $activity_entry $$)))
              (find-by-id $activity.events $event_id $))
        </code-helper>

        <int32_t name='parent_event_id' ref-target='activity_event' aux-value='$$.activity_id'/>

        <bitfield name='flags'>
            <flag-bit name='dismissed' comment='to be removed from squad_position, anyway'/>
            <flag-bit name='squad' comment='for all in training session, but not ind.drill'/>
        </bitfield>

        <virtual-methods>
            <vmethod ret-type='activity_event_type' name='getType'/>
            <vmethod name='write_file'> <pointer comment='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer comment='file_compressorst'/>
                <int32_t name='loadversion'/>
            </vmethod>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='bool' name='isEmpty'
                     comment='returns true if hist_figure_ids empty or if various subclass fields are uninitialized'/>

            <vmethod comment='returns -1'/>
            <vmethod comment='does nothing'> <pointer/> </vmethod>
            <vmethod name='getParticipantInfo'>
                <ret-type> <pointer type-name='activity_event_participants'/> </ret-type>
            </vmethod>
            <vmethod name='dismiss'> <bool name='children_too'/> </vmethod>
            <vmethod name='removeParticipant'> <int32_t name='histfig'/> <int32_t name='unit'/> </vmethod>

            <vmethod name='process'> <pointer type-name='unit'/> </vmethod>
            <vmethod ret-type='int32_t' name='checkDrillInvalid'/>
            <vmethod ret-type='bool' name='decUniformLock'/>
            <vmethod name='getSquadEventType'>
                <ret-type> <enum base-type='int16_t' type-name='squad_event_type'/> </ret-type>
            </vmethod>
            <vmethod name='setDemoSkill'>
                <enum base-type='int16_t' name='skill' type-name='job_skill'/>
            </vmethod>

            <vmethod name='setSkillDemoTimers'>
                <int32_t name='wait_countdown'/>
                <int32_t name='train_rounds'/>
                <int32_t name='train_countdown'/>
            </vmethod>
            <vmethod name='adjustOrganizeCounter'>
                <int32_t name='amount'/>
            </vmethod>
            <vmethod name='getOrganizer' comment='or perhaps somebody else - only works for combat_training and skill_demonstration'>
                <pointer type-name='int32_t' name='hist_figure_id'/>
                <pointer type-name='int32_t' name='unit_id'/>
            </vmethod>
            <vmethod name='getBuilding' comment='returns pointer to building_id'>
                <ret-type><pointer type-name='int32_t'/></ret-type>
            </vmethod>
            <vmethod ret-type='bool' name='isSparring'/>

            <vmethod ret-type='int16_t' name='getUniformType'/>
            <vmethod name='getName'>
                <int32_t/>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='activity_event_individual_skill_drillst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='countdown' init-value='300'/>
    </class-type>

    <class-type type-name='activity_event_training_sessionst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
    </class-type>

    <class-type type-name='activity_event_combat_trainingst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='organize_counter' comment='gt 0 => organizing, lt 0 => done'/>
    </class-type>

    <class-type type-name='activity_event_skill_demonstrationst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <enum base-type='int16_t' name='skill' type-name='job_skill'/>
        <int32_t name='organize_counter'/>
        <int32_t name='wait_countdown' init-value='100'/>
        <int32_t name='train_rounds' init-value='15'/>
        <int32_t name='train_countdown' init-value='20'/>
    </class-type>

    <class-type type-name='activity_event_ranged_practicest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='uniform_lock'/>
    </class-type>

    <class-type type-name='activity_event_sparringst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <stl-vector name='groups'>
            <pointer>
                <stl-vector name='units' type-name='int32_t' ref-target='unit'/>
                <int32_t name='countdown' init-value='300'/>
                <int32_t name='building_id' ref-target='building'/>
            </pointer>
        </stl-vector>
        <int32_t name='countdown' init-value='300'/>
    </class-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
