<data-definition>
    <enum-type type-name='creature_raw_flags'>
        <enum-item/>
        <enum-item name='EQUIPMENT_WAGON'/>
        <enum-item name='MUNDANE'/>
        <enum-item name='VERMIN_EATER'/>
        <enum-item name='VERMIN_GROUNDER'/>
        <enum-item name='VERMIN_ROTTER'/>
        <enum-item name='VERMIN_SOIL'/>
        <enum-item name='VERMIN_SOIL_COLONY'/>

        <enum-item name='LARGE_ROAMING'/>
        <enum-item name='VERMIN_FISH'/>
        <enum-item name='LOOSE_CLUSTERS'/>
        <enum-item name='FANCIFUL'/>
        <enum-item name='BIOME_MOUNTAIN'/>
        <enum-item name='BIOME_GLACIER'/>
        <enum-item name='BIOME_TUNDRA'/>
        <enum-item name='BIOME_SWAMP_TEMPERATE_FRESHWATER'/>

        <enum-item name='BIOME_SWAMP_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_MARSH_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_MARSH_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_SWAMP_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_SWAMP_TROPICAL_SALTWATER'/>
        <enum-item name='BIOME_SWAMP_MANGROVE'/>
        <enum-item name='BIOME_MARSH_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_MARSH_TROPICAL_SALTWATER'/>

        <enum-item name='BIOME_FOREST_TAIGA'/>
        <enum-item name='BIOME_FOREST_TEMPERATE_CONIFER'/>
        <enum-item name='BIOME_FOREST_TEMPERATE_BROADLEAF'/>
        <enum-item name='BIOME_FOREST_TROPICAL_CONIFER'/>
        <enum-item name='BIOME_FOREST_TROPICAL_DRY_BROADLEAF'/>
        <enum-item name='BIOME_FOREST_TROPICAL_MOIST_BROADLEAF'/>
        <enum-item name='BIOME_GRASSLAND_TEMPERATE'/>
        <enum-item name='BIOME_SAVANNA_TEMPERATE'/>

        <enum-item name='BIOME_SHRUBLAND_TEMPERATE'/>
        <enum-item name='BIOME_GRASSLAND_TROPICAL'/>
        <enum-item name='BIOME_SAVANNA_TROPICAL'/>
        <enum-item name='BIOME_SHRUBLAND_TROPICAL'/>
        <enum-item name='BIOME_DESERT_BADLAND'/>
        <enum-item name='BIOME_DESERT_ROCK'/>
        <enum-item name='BIOME_DESERT_SAND'/>
        <enum-item name='BIOME_OCEAN_TROPICAL'/>

        <enum-item name='BIOME_OCEAN_TEMPERATE'/>
        <enum-item name='BIOME_OCEAN_ARCTIC'/>
        <enum-item name='BIOME_SUBTERRANEAN_WATER'/>
        <enum-item name='BIOME_SUBTERRANEAN_CHASM'/>
        <enum-item name='BIOME_SUBTERRANEAN_LAVA'/>
        <enum-item name='BIOME_POOL_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_POOL_TEMPERATE_BRACKISHWATER'/>
        <enum-item name='BIOME_POOL_TEMPERATE_SALTWATER'/>

        <enum-item name='BIOME_POOL_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_POOL_TROPICAL_BRACKISHWATER'/>
        <enum-item name='BIOME_POOL_TROPICAL_SALTWATER'/>
        <enum-item name='BIOME_LAKE_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_LAKE_TEMPERATE_BRACKISHWATER'/>
        <enum-item name='BIOME_LAKE_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_LAKE_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_LAKE_TROPICAL_BRACKISHWATER'/>

        <enum-item name='BIOME_LAKE_TROPICAL_SALTWATER'/>
        <enum-item name='BIOME_RIVER_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_RIVER_TEMPERATE_BRACKISHWATER'/>
        <enum-item name='BIOME_RIVER_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_RIVER_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_RIVER_TROPICAL_BRACKISHWATER'/>
        <enum-item name='BIOME_RIVER_TROPICAL_SALTWATER'/>
        <enum-item name='GOOD'/>

        <enum-item name='EVIL'/>
        <enum-item name='SAVAGE'/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='GENERATED'/>
        <enum-item/>
        <enum-item/>
        <enum-item name='DOES_NOT_EXIST'/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='ARTIFICIAL_HIVEABLE'/>

        <enum-item name='UBIQUITOUS'/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
    </enum-type>

    <enum-type type-name='caste_raw_flags'>
        <enum-item name='AMPHIBIOUS'/>
        <enum-item name='AQUATIC'/>
        <enum-item name='LOCKPICKER'/>
        <enum-item name='MISCHIEVOUS'/>
        <enum-item name='PATTERNFLIER'/>
        <enum-item name='CURIOUSBEAST_ANY'/>
        <enum-item name='CURIOUSBEAST_ITEM'/>
        <enum-item name='CURIOUSBEAST_GUZZLER'/>

        <enum-item name='FLEEQUICK'/>
        <enum-item name='AT_PEACE_WITH_WILDLIFE'/>
        <enum-item name='SWIMS_LEARNED'/>
        <enum-item name='CANNOT_UNDEAD'/>
        <enum-item name='CURIOUSBEAST_EATER'/>
        <enum-item name='NO_EAT'/>
        <enum-item name='NO_DRINK'/>
        <enum-item name='NO_SLEEP'/>

        <enum-item name='COMMON_DOMESTIC'/>
        <enum-item name='WAGON_PULLER'/>
        <enum-item name='PACK_ANIMAL'/>
        <enum-item name='FLIER'/>
        <enum-item name='LARGE_PREDATOR'/>
        <enum-item name='MAGMA_VISION'/>
        <enum-item name='FIREIMMUNE'/>
        <enum-item name='FIREIMMUNE_SUPER'/>

        <enum-item name='WEBBER'/>
        <enum-item name='WEBIMMUNE'/>
        <enum-item name='FISHITEM'/>
        <enum-item name='IMMOBILE_LAND'/>
        <enum-item name='IMMOLATE'/>
        <enum-item name='MILKABLE'/>
        <enum-item name='NO_SPRING'/>
        <enum-item name='NO_SUMMER'/>

        <enum-item name='NO_AUTUMN'/>
        <enum-item name='NO_WINTER'/>
        <enum-item name='BENIGN'/>
        <enum-item name='VERMIN_NOROAM'/>
        <enum-item name='VERMIN_NOTRAP'/>
        <enum-item name='VERMIN_NOFISH'/>
        <enum-item name='HAS_NERVES'/>
        <enum-item name='NO_DIZZINESS'/>

        <enum-item name='NO_FEVERS'/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='AMBUSHPREDATOR'/>
        <enum-item/>
        <enum-item name='NOT_BUTCHERABLE'/>
        <enum-item name='COOKABLE_LIVE'/>

        <enum-item/>
        <enum-item name='FIREBREATH'/>
        <enum-item name='DRAGONFIREBREATH'/>
        <enum-item name='MEANDERER'/>
        <enum-item name='THICKWEB'/>
        <enum-item name='TRAINABLE_HUNTING'/>
        <enum-item name='PET'/>
        <enum-item name='PET_EXOTIC'/>

        <enum-item/>
        <enum-item name='CAN_SPEAK'/>
        <enum-item name='CAN_LEARN'/>
        <enum-item name='UTTERANCES'/>
        <enum-item name='BONECARN'/>
        <enum-item name='CARNIVORE'/>
        <enum-item name='UNDERSWIM'/>
        <enum-item name='NOEXERT'/>

        <enum-item name='NOPAIN'/>
        <enum-item name='EXTRAVISION'/>
        <enum-item name='NOBREATHE'/>
        <enum-item name='NOSTUN'/>
        <enum-item name='NONAUSEA'/>
        <enum-item name='BLOOD'/>
        <enum-item name='TRANCES'/>
        <enum-item name='NOEMOTION'/>

        <enum-item name='SLOW_LEARNER'/>
        <enum-item name='NOSTUCKINS'/>
        <enum-item name='PUS'/>
        <enum-item name='NOSKULL'/>
        <enum-item name='NOSKIN'/>
        <enum-item name='NOBONES'/>
        <enum-item name='NOMEAT'/>
        <enum-item name='PARALYZEIMMUNE'/>

        <enum-item name='NOFEAR'/>
        <enum-item name='CANOPENDOORS'/>
        <enum-item/>
        <enum-item name='GETS_WOUND_INFECTIONS'/>
        <enum-item name='NOSMELLYROT'/>
        <enum-item name='REMAINS_UNDETERMINED'/>
        <enum-item name='HASSHELL'/>
        <enum-item name='PEARL'/>

        <enum-item name='TRAINABLE_WAR'/>
        <enum-item name='NO_THOUGHT_CENTER_FOR_MOVEMENT'/>
        <enum-item name='ARENA_RESTRICTED'/>
        <enum-item name='LAIR_HUNTER'/>
        <enum-item name='LIKES_FIGHTING'/>
        <enum-item name='VERMIN_HATEABLE'/>
        <enum-item name='VEGETATION'/>
        <enum-item name='MAGICAL'/>

        <enum-item name='NATURAL'/>
        <enum-item name='BABY'/>
        <enum-item name='CHILD'/>
        <enum-item name='MULTIPLE_LITTER_RARE'/>
        <enum-item name='MOUNT'/>
        <enum-item name='MOUNT_EXOTIC'/>
        <enum-item name='FEATURE_ATTACK_GROUP'/>
        <enum-item name='VERMIN_MICRO'/>

        <enum-item name='EQUIPS'/>
        <enum-item name='LAYS_EGGS'/>
        <enum-item name='GRAZER'/>
        <enum-item name='NOTHOUGHT'/>
        <enum-item name='TRAPAVOID'/>
        <enum-item name='CAVE_ADAPT'/>
        <enum-item name='MEGABEAST'/>
        <enum-item name='SEMIMEGABEAST'/>

        <enum-item name='ALL_ACTIVE'/>
        <enum-item name='DIURNAL'/>
        <enum-item name='NOCTURNAL'/>
        <enum-item name='CREPUSCULAR'/>
        <enum-item name='MATUTINAL'/>
        <enum-item name='VESPERTINE'/>
        <enum-item name='LIGHT_GEN'/>
        <enum-item name='LISP'/>

        <enum-item name='GETS_INFECTIONS_FROM_ROT'/>
        <enum-item/>
        <enum-item name='ALCOHOL_DEPENDENT'/>
        <enum-item name='SWIMS_INNATE'/>
        <enum-item name='POWER'/>
        <enum-item/>
        <enum-item/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='FEATURE_BEAST'/>
        <enum-item name='TITAN'/>
        <enum-item name='UNIQUE_DEMON'/>
        <enum-item name='DEMON'/>
        <enum-item name='MANNERISM_LAUGH'/>

        <enum-item name='MANNERISM_SMILE'/>
        <enum-item name='MANNERISM_WALK'/>
        <enum-item name='MANNERISM_SIT'/>
        <enum-item name='MANNERISM_BREATH'/>
        <enum-item name='MANNERISM_POSTURE'/>
        <enum-item name='MANNERISM_STRETCH'/>
        <enum-item name='MANNERISM_EYELIDS'/>
        <enum-item name='NIGHT_CREATURE_ANY'/>

        <enum-item name='NIGHT_CREATURE_HUNTER'/>
        <enum-item name='NIGHT_CREATURE_BOGEYMAN'/>
        <enum-item name='CONVERTED_SPOUSE'/>
        <enum-item name='SPOUSE_CONVERTER'/>
        <enum-item name='SPOUSE_CONVERSION_TARGET'/>
        <enum-item name='DIE_WHEN_VERMIN_BITE'/>
        <enum-item name='REMAINS_ON_VERMIN_BITE_DEATH'/>
        <enum-item name='COLONY_EXTERNAL'/>

        <enum-item name='LAYS_UNUSUAL_EGGS'/>
        <enum-item name='RETURNS_VERMIN_KILLS_TO_OWNER'/>
        <enum-item name='HUNTS_VERMIN'/>
        <enum-item name='ADOPTS_OWNER'/>
        <enum-item name='SOUND_ALERT'/>
        <enum-item name='SOUND_PEACEFUL_INTERMITTENT'/>
    </enum-type>


    <struct-type type-name='body_part_layer_raw'>
        <stl-string name='layer_name'/>

        <code-helper name='describe'>$.layer_name</code-helper>

        <int32_t name='tissue_id'/>

        <df-flagarray name='flags'/>

        <int32_t name='unk2'/>

        <int32_t name='healing_rate'/>
        <int32_t name='vascular'/>
        <int32_t name='pain_receptors'/>

        <int32_t name='unk6'/>
        <int16_t name='unk7'/>

        <stl-vector name='unk8'/>

        <int32_t name='layer_id' comment='across all body parts'/>

        <int32_t name='unk10'/>
        <int32_t name='unk11'/>
        <int32_t name='layer_depth' comment='-1 for skin and internal organs'/>
        <int32_t name='unk13'/>
        <int32_t name='unk14'/>
        <int32_t name='unk15'/>
    </struct-type>

    <struct-type type-name='body_part_raw'>
        <stl-string name='part_code'/>
        <stl-string name='part_name'/>

        <code-helper name='describe'>$.part_name</code-helper>

        <int16_t name='con_part_id'/>

        <df-flagarray name='flags'/>

        <stl-vector name='layers'>
            <pointer type-name='body_part_layer_raw'/>
        </stl-vector>

        <int32_t name='unk2'/>
        <int32_t name='unk3'/>
        <int32_t name='unk4'/>
        <int32_t name='unk5'/>
        <int32_t name='relsize'/>
        <int32_t name='unk7'/>

        <int16_t name='unk7b'/>

        <stl-vector name='name_singular'>
            <pointer type-name='stl-string'/>
        </stl-vector>
        <stl-vector name='name_plural'>
            <pointer type-name='stl-string'/>
        </stl-vector>

        <pointer name='bp_relation_part_id'>
            <stl-vector type-name='int16_t'/>
        </pointer>
        <pointer name='bp_relation_code'>
            <stl-vector type-name='int16_t'/> // 0 around of, 1 around by
        </pointer>
        <pointer name='bp_relation_coverage'>
            <stl-vector type-name='int16_t'/>
        </pointer>

        <uint16_t name='min_temp'/>
        <uint16_t name='max_temp'/>
        <uint16_t name='temp_factor'/>

        <int32_t name='unused'/>

        <int32_t name='unk11'/>
        <int16_t name='unk12'/>
    </struct-type>

    <struct-type type-name='color_modifier_raw'>
        <stl-vector name='color_indexes'>
            <int32_t ref-target='descriptor_color'/>
        </stl-vector>
        <stl-vector type-name='int32_t' name='unk2'/>

        <stl-vector type-name='int16_t' name='unk3'/>
        <stl-vector type-name='int16_t' name='unk4'/>

        <int16_t name='unk5' />
        <int32_t name='start_date'/>
        <int32_t name='end_date'/>
        <int32_t name='unk6' />
        <stl-string name="part" />
        <int16_t name="unk_6c"/>
        <int16_t name="unk_6e"/>
        <int32_t name="unk_70"/>
        <int32_t name="unk_74"/>
        <stl-vector name="unk_78">
            <pointer/>
        </stl-vector>
        <stl-vector name="unk_88">
            <pointer/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='caste_body_info'>
        <stl-vector name='body_parts'>
            <pointer type-name='body_part_raw'/>
        </stl-vector>

        <stl-vector name='attacks'>
            <pointer/>
        </stl-vector>

        <int32_t name='unk8'/>

        <stl-vector name='layer_part' index-refers-to='$$._global.layer_idx[$].refers-to'>
            <int16_t refers-to='$$._global.body_parts[$]'/>
        </stl-vector>
        <stl-vector name='layer_idx'>
            <int16_t refers-to='$$._global.layer_part[$$._key].refers-to.layers[$]'/>
        </stl-vector>
        <stl-vector name='unk10'/>
        <stl-vector name='layer_nonsolid' index-refers-to='$$._global.layer_part[$].refers-to'>
            Index in nonsolid_layers if applicable
            <int32_t refers-to='$$._global.nonsolid_layers[$].refers-to'/>
        </stl-vector>

        <stl-vector name='nonsolid_layers'>
            For blood, magma, iron men etc, lists BLOOD/MAGMA/GAS layers.
            For other titans and FBs, lists all layers. For ordinary, empty.
            <int32_t refers-to='$$._global.layer_part[$].refers-to'/>
        </stl-vector>

        <compound name='materials' type-name='material_vec_ref'/>

        <int32_t name='unk15a'/>
        <int32_t name='unk15b'/>
        <int32_t name='unk15c'/>
        <int32_t name='unk15d'/>
    </struct-type>

    <struct-type type-name='caste_raw'>
        <stl-string name='caste_id'/>

        <code-helper name='describe'>(fmt "~:(~A ~A~)" $.caste_id $.caste_name[0])</code-helper>
        <code-helper name='find-instance'>$global.world.raws.creatures.all[$$].caste[$]</code-helper>

        <static-array type-name='stl-string' name='caste_name' count='3'/>

        <stl-string name='vermin_bite_txt'/>
        <stl-string name='gnawer_txt'/>

        <static-array type-name='stl-string' name='baby_name' count='2'/>
        <static-array type-name='stl-string' name='child_name' count='2'/>
        <static-array type-name='stl-string' name='itemcorpse_str' count='5'/> // temporary
        <static-array type-name='stl-string' name='remains' count='2'/>
        <stl-string name='description'/>
        <static-array type-name='stl-string' name='mannerisms' count='17'>
            <comment>fingers[2], nose, ear, head, eyes, mouth, hair, knuckles, lips, cheek, nails, f eet, arms, hands, tongue, leg</comment>
        </static-array>

        <uint8_t name='caste_tile'/>
        <uint8_t name='caste_soldier_tile'/>
        <uint8_t name='caste_alttile'/>
        <uint8_t name='caste_soldier_alttile'/>
        <uint8_t name='caste_glowtile'/>

        <uint16_t name='homeotherm'/>
        <int16_t name='unk1_1'/>
        <int16_t name='unk1_2'/>
        <uint16_t name='fixed_temp'/>

        <static-array type-name='int16_t' name='caste_color' count='3'/>

        <compound name='misc'>
            <int16_t name='litter_size_min'/>
            <int16_t name='litter_size_max'/>
            <int16_t name='penetratepower'/>
            <int16_t name='vermin_bite_chance'/>
            <int16_t name='grasstrample'/>
            <int16_t name='buildingdestroyer'/>
            <enum base-type='int16_t' name='itemcorpse_itemtype' type-name='item_type'/>
            <int16_t name='itemcorpse_itemsubtype'/>
            <int16_t name='itemcorpse_materialtype'
                     ref-target='material' aux-value='$$.itemcorpse_materialindex'/>
            <int16_t name='itemcorpse_materialindex'/> // NOT 32-bit!
            <int16_t name='itemcorpse_quality'/>
            <static-array type-name='int16_t' name='remains_color' count='3'/>
            <int16_t name='difficulty'/>
            <static-array type-name='int16_t' name='caste_glowcolor' count='3'/>
            <int16_t name='beach_frequency'/>
            <int16_t name='clutch_size_min'/>
            <int16_t name='clutch_size_max'/>
            <int32_t name='speed'/>
            <int32_t name='modvalue'/>
            <int32_t name='petvalue'/>
            <int32_t name='milkable'/>
            <int32_t name='viewrange'/>
            <int32_t name='maxage_min'/>
            <int32_t name='maxage_max'/>
            <static-array type-name='int32_t' name='unk3' count='2'/>
            <int32_t name='swim_speed'/>
            <int32_t name='trade_capacity'/>
            <int32_t name='unk4'/>
            <int32_t name='pop_ratio'/>
            <int32_t name='adult_size'/>
            <static-array type-name='int32_t' name='unk5' count='4'/>
            <static-array type-name='int32_t' name='attack_trigger' count='3'/>
            <int32_t name='egg_size'/>
            <int32_t name='grazer'/>
            <int32_t name='petvalue_divisor'/>
            <int32_t name='prone_to_rage'/>
            <static-array type-name='int32_t' name='unk6' count='29'/>
        </compound>

        <compound name='personality'>
            <static-array type-name='int16_t' name='a' count='30' index-enum='personality_facet_type'/>
            <static-array type-name='int16_t' name='b' count='30' index-enum='personality_facet_type'/>
            <static-array type-name='int16_t' name='c' count='30' index-enum='personality_facet_type'/>
        </compound>

        <df-flagarray name='flags' index-enum='caste_raw_flags'/>

        <int32_t name='unk7'/>

        <compound name='body_info' type-name='caste_body_info'/>

        <stl-vector name='caste_speech_1'/>
        <stl-vector name='caste_speech_2'/>

        <static-array name='skill_rates' count='4'>
            <static-array type-name='int32_t' count='116' index-enum='job_skill'/>
        </static-array>

        <compound name='attributes'>
            <static-array name='phys_att_range' count='6' index-enum='physical_attribute_type'>
                <static-array type-name='int32_t' count='7'/>
            </static-array>
            <static-array name='ment_att_range' count='13' index-enum='mental_attribute_type'>
                <static-array type-name='int32_t' count='7'/>
            </static-array>
            <static-array name='phys_att_rates' count='6' index-enum='physical_attribute_type'>
                <static-array type-name='int32_t' count='4'/>
            </static-array>
            <static-array name='ment_att_rates' count='13' index-enum='mental_attribute_type'>
                <static-array type-name='int32_t' count='4'/>
            </static-array>
            <static-array type-name='int32_t' name='phys_att_cap_perc' count='6' index-enum='physical_attribute_type'/>
            <static-array type-name='int32_t' name='ment_att_cap_perc' count='13' index-enum='mental_attribute_type'/>
        </compound>

        <int8_t name='gender'/>

        <stl-vector type-name='int32_t' name='body_size_1'/>
        <stl-vector type-name='int32_t' name='body_size_2'/>

        <stl-vector name='unk_1164'/>
        <stl-vector name='unk_1174'/>
        <stl-vector name='unk_1184'/>
        <stl-vector name='unk_1194'/>
        <stl-vector name='unk_11a4'/>
        <stl-vector name='unk_11b4' type-name='int16_t'/>
        <stl-vector name='unk_11c4' type-name='int16_t'/>
        <stl-vector name='unk_11d4' type-name='int32_t'/>
        <stl-vector name='color_modifiers'>
            <pointer type-name='color_modifier_raw'/>
        </stl-vector>
        <stl-vector name='unk_11f4'/>
        <stl-vector name='unk_1204'/>

        <static-array name='unk16a' count='4'>
            <stl-vector/>
        </static-array>
        <static-array name='unk16b' count='4'>
            <stl-vector/>
        </static-array>

        <static-array type-name='int32_t' name='unk18' count='2'/>

        <stl-vector type-name='int16_t' name='natural_skill_id'/>
        <stl-vector type-name='int32_t' name='natural_skill_exp'/>
        <stl-vector type-name='int32_t' name='natural_skill_lvl'/>

        <compound name='caste_profession_name'>
            <static-array type-name='stl-string' name='singular' count='106' index-enum='profession'/>
            <static-array type-name='stl-string' name='plural' count='106' index-enum='profession'/>
        </compound>

        <compound name='extracts'>
            <stl-vector type-name='int16_t' name='extract_mat'/>
            <stl-vector type-name='int32_t' name='extract_matidx'/>
            <static-array name='extract_str' count='3'>
                <stl-vector>
                    <pointer type-name='stl-string'/>
                </stl-vector>
            </static-array>

            <int16_t name='milkable_mat'/>
            <int32_t name='milkable_matidx'/>
            <static-array name='milkable_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='webber_mat'/>
            <int32_t name='webber_matidx'/>
            <static-array name='webber_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='vermin_bite_mat'/>
            <int32_t name='vermin_bite_matidx'/>
            <int16_t name='vermin_bite_chance'/>
            <static-array name='vermin_bite_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='tendons_mat'/>
            <int32_t name='tendons_matidx'/>
            <static-array name='tendons_str' count='3'>
                <stl-string/>
            </static-array>
            <int32_t name='tendons_heal'/>

            <int16_t name='ligaments_mat'/>
            <int32_t name='ligaments_matidx'/>
            <static-array name='ligaments_str' count='3'>
                <stl-string/>
            </static-array>
            <int32_t name='ligaments_heal'/>

            <int16_t name='blood_state'/>
            <int16_t name='blood_mat'/>
            <int32_t name='blood_matidx'/>
            <static-array name='blood_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='pus_state'/>
            <int16_t name='pus_mat'/>
            <int32_t name='pus_matidx'/>
            <static-array name='pus_str' count='3'>
                <stl-string/>
            </static-array>

            <stl-vector type-name='int16_t' name='material_breath_attack_mattype'/>
            <stl-vector type-name='int32_t' name='material_breath_attack_matindex'/>
            <static-array name='material_breath_attack_str' count='3'>
                <stl-vector>
                    <pointer type-name='stl-string'/>
                </stl-vector>
            </static-array>
            <stl-vector type-name='int16_t' name='material_breath_attack_type'/>

            <stl-vector type-name='int16_t' name='egg_material_mattype'/>
            <stl-vector type-name='int32_t' name='egg_material_matindex'/>
            <static-array name='egg_material_str' count='3'>
                <stl-vector>
                    <pointer type-name='stl-string'/>
                </stl-vector>
            </static-array>

            <stl-vector name='lays_unusual_eggs_itemtype'>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector name='lays_unusual_eggs_itemsubtype'/>
            <stl-vector type-name='int16_t' name='lays_unusual_eggs_mattype'/>
            <stl-vector type-name='int32_t' name='lays_unusual_eggs_matindex'/>
            <static-array name='lays_unusual_eggs_str' count='5'>
                <stl-vector>
                    <pointer type-name='stl-string'/>
                </stl-vector>
            </static-array>
        </compound>

        <stl-vector name='unk22'/>

        <stl-vector name='creature_class'>
            <pointer type-name='stl-string'/>
        </stl-vector>

        <compound name='unknown2'>
            <stl-vector name='unk23a' type-name='int32_t'/>
            <stl-vector name='unk23b' type-name='int32_t'/>
            <stl-vector name='unk23c' type-name='int32_t'/>

            <df-flagarray name='unk24_flags'/>
            <df-flagarray name='unk25_flags'/>

            <static-array type-name='int32_t' name='unk26' count='33'/>

            <compound name='materials' type-name='material_vec_ref'/>
            <stl-vector name='unk_2f20' type-name='int16_t'/>
            <stl-vector name='unk_2f30' type-name='int8_t'/>
            <stl-vector name='unk_2f40' type-name='int32_t'/>

            muscle:
            <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
            <int32_t name='mat_index'/>
        </compound>

        <static-array type-name='int32_t' name='habit_num' count='2'/>
        <static-array name='habit' count='2'><stl-vector/></static-array>
        <static-array name='lair' count='2'><stl-vector/></static-array>
        <static-array name='lair_characteristic' count='2'><stl-vector/></static-array>
        <static-array name='lair_hunter_speech' count='2'><stl-vector/></static-array>
        <static-array name='unk29' count='2'><stl-vector/></static-array>
        <static-array name='specific_food' count='2'><stl-vector/></static-array>

        <stl-vector name='sound'><pointer/></stl-vector>
        <stl-vector type-name='int32_t' name='sound_alert'/>
        <stl-vector type-name='int32_t' name='sound_peaceful_intermittent'/>
    </struct-type>

    <struct-type type-name='creature_raw' instance-vector='$global.world.raws.creatures.all'>
        <stl-string name='creature_id'/>

        <code-helper name='describe'>$.creature_id</code-helper>

        <static-array type-name='stl-string' name='name' count='3'/>
        <static-array type-name='stl-string' name='general_baby_name' count='2'/>
        <static-array type-name='stl-string' name='general_child_name' count='2'/>

        <uint8_t name='creature_tile'/>
        <uint8_t name='creature_soldier_tile'/>
        <uint8_t name='alttile'/>
        <uint8_t name='soldier_alttile'/>
        <uint8_t name='glowtile'/>

        <uint16_t name='temperature1'/>
        <uint16_t name='temperature2'/>

        <int16_t name='frequency'/>
        <static-array type-name='int16_t' name='population_number' count='2'/>
        <static-array type-name='int16_t' name='cluster_number' count='2'/>
        <static-array type-name='int16_t' name='triggerable_group' count='2'/>
        <static-array type-name='int16_t' name='color' count='3'/>
        <static-array type-name='int16_t' name='glowcolor' count='3'/>

        <int32_t name='adultsize'/>

        <stl-vector name='prefstring'>
            <pointer type-name='stl-string'/>
        </stl-vector>

        <stl-vector type-name='int16_t' name='sphere'/>
        <stl-vector name='caste'>
            <pointer type-name='caste_raw'/>
        </stl-vector>

        <stl-vector type-name='int32_t' name='pop_ratio'/>

        <df-flagarray name='flags' index-enum='creature_raw_flags'/>

        <compound name='stuff'>
            <static-array name='stuff1' count='2'>
                <static-array type-name='int32_t' count='7'/>
            </static-array>

            <static-array name='stuff2a' count='7'>
                <static-array type-name='int32_t' count='12'/>
            </static-array>

            <static-array name='stuff2b' count='7'>
                <static-array type-name='int32_t' count='12'/>
            </static-array>

            <static-array type-name='int32_t' name='unk3' count='84'/>

            <static-array name='stuff3a' count='7'>
                <static-array type-name='int32_t' count='106'/>
            </static-array>

            <static-array name='stuff3b' count='7'>
                <static-array type-name='int32_t' count='106'/>
            </static-array>

            <static-array type-name='int8_t' name='stuff4' count='7'/>

            <static-array name='stuff2c' count='7'>
                <static-array type-name='int8_t' count='12'/>
            </static-array>

            <static-array type-name='int8_t' name='unk4' count='42'/>

            <static-array name='stuff3c' count='7'>
                <static-array type-name='int8_t' count='106'/>
            </static-array>
        </compound>

        <stl-vector name='unk5'/>
        <stl-vector name='speech1'/>
        <stl-vector name='speech2'/>
        <stl-vector name='speech3'/>

        <stl-vector name='material'>
            <pointer type-name='material'/>
        </stl-vector>
        <stl-vector type-name='pointer' name='tissue'/>

        <compound name='profession_name'>
            <static-array type-name='stl-string' name='singular' count='106' index-enum='profession'/>
            <static-array type-name='stl-string' name='plural' count='106' index-enum='profession'/>
        </compound>

        <pointer name='unk6pa'/>
        <pointer name='unk6pb'/>

        <stl-vector type-name='int32_t' name='unk6'/>
        <stl-vector type-name='int32_t' name='unk7'/>

        <stl-vector type-name='int32_t' name='hive_product_0'/>
        <stl-vector type-name='int32_t' name='hive_product_1'/>
        <stl-vector type-name='int16_t' name='hive_product_2'/>
        <stl-vector type-name='int16_t' name='hive_product_3'/>
        <stl-vector type-name='int16_t' name='hive_product_4'/>
        <stl-vector type-name='int32_t' name='hive_product_5'/>

        <static-array name='hive_product_tmpstr' count='5'>
            <stl-vector>
                <pointer type-name='stl-string'/>
            </stl-vector>
        </static-array>

        <int32_t name='unk8'/>

        <stl-vector name='raws'>
            <pointer type-name='stl-string'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='creature_variation_convert_tag'>
        <stl-string name='cvct_master'/>
        <stl-string name='cvct_target'/>
        <stl-string name='cvct_replacement'/>
    </struct-type>

    <struct-type type-name='creature_variation' instance-vector='$global.world.raws.creature_variations'>
        <stl-string name='id'/>
        <stl-vector name='cv_convert_tag'>
            <pointer type-name='creature_variation_convert_tag'/>
        </stl-vector>
        <stl-vector name='cv_new_tag'>
            <pointer type-name='stl-string'/>
        </stl-vector>
        <stl-vector name='cv_remove_tag'>
            <pointer type-name='stl-string'/>
        </stl-vector>
    </struct-type>

    <enum-type type-name='body_part_template_flags'>
        <enum-item name='HEAD'/>
        <enum-item name='UPPERBODY'/>
        <enum-item name='LOWERBODY'/>
        <enum-item name='SIGHT'/>
        <enum-item name='EMBEDDED'/>
        <enum-item name='INTERNAL'/>
        <enum-item name='CIRCULATION'/>
        <enum-item name='SKELETON'/>

        <enum-item name='LIMB'/>
        <enum-item name='GRASP'/>
        <enum-item name='STANCE'/>
        <enum-item name='GUTS'/>
        <enum-item name='BREATHE'/>
        <enum-item name='SMALL'/>
        <enum-item name='THROAT'/>
        <enum-item name='JOINT'/>

        <enum-item name='THOUGHT'/>
        <enum-item name='NERVOUS'/>
        <enum-item name='RIGHT'/>
        <enum-item name='LEFT'/>
        <enum-item name='HEAR'/>
        <enum-item name='SMELL'/>
        <enum-item name='FLIER'/>
        <enum-item name='DIGIT'/>

        <enum-item name='MOUTH'/>
        <enum-item name='APERTURE'/>
        <enum-item name='SOCKET'/>
        <enum-item name='TOTEMABLE'/>
        <enum-item name='UNDER_PRESSURE'/>
        <enum-item name='VERMIN_BUTCHER_ITEM'/>
        <enum-item name='CONNECTOR'/>
    </enum-type>

    <enum-type type-name='body_part_template_contype' base-type='int16_t'>
        <enum-item name='UPPERBODY'/>
        <enum-item name='LOWERBODY'/>
        <enum-item name='HEAD'/>
        <enum-item name='GRASP'/>
        <enum-item name='STANCE'/>
    </enum-type>

    <struct-type type-name='body_part_template'>
        <stl-string name='id'/>
        <stl-string name='con'/>
        <stl-string name='category'/>
        <stl-string name='con_cat'/>
        <enum type-name='body_part_template_contype' base-type='int16_t' name='contype'/>

        <df-flagarray name='flags' index-enum='body_part_template_flags'/>

        <int32_t name='default_relsize'/>
        <int32_t name='number'/>

        <stl-vector name='name_singular' comment='first comes from BP, rest come from INDIVIDUAL_NAME'>
            <pointer type-name='stl-string'/>
        </stl-vector>
        <stl-vector name='name_plural'>
            <pointer type-name='stl-string'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='body_template' instance-vector='$global.world.raws.body_templates'>
        <stl-string name='id'/>
        <stl-vector name='parts'>
            <pointer type-name='body_part_template'/>
        </stl-vector>
    </struct-type>

    <enum-type type-name='tissue_template_flags'>
        <enum-item name='THICKENS_ON_STRENGTH'/>
        <enum-item name='THICKENS_ON_ENERGY_STORAGE'/>
        <enum-item name='ARTERIES'/>
        <enum-item name='SCARS'/>
        <enum-item name='STRUCTURAL'/>
        <enum-item name='NERVOUS'/>
        <enum-item name='THOUGHT'/>
        <enum-item name='MUSCULAR'/>

        <enum-item name='SMELL'/>
        <enum-item name='HEAR'/>
        <enum-item name='FLIGHT'/>
        <enum-item name='BREATHE'/>
        <enum-item name='SIGHT'/>
        <enum-item name='COSMETIC'/>
        <enum-item name='CONNECTS'/>
        <enum-item name='FUNCTIONAL'/>

        <enum-item name='MAJOR_ARTERIES'/>
        <enum-item name='TISSUE_LEAKS'/>
        <enum-item name='STYLEABLE'/>
        <enum-item name='CONNECTIVE_TISSUE_ANCHOR'/>
        <enum-item name='SETTABLE'/>
        <enum-item name='SPLINTABLE'/>
    </enum-type>

    <struct-type type-name='tissue_template' instance-vector='$global.world.raws.tissue_templates'>
        <stl-string name='id'/>
        <df-flagarray name='flags' index-enum='tissue_template_flags'/>
        <stl-string name='tissue_name_singular'/>
        <stl-string name='tissue_name_plural'/>
        <static-array name='tissue_material_str' type-name='stl-string' count='3'/>
        <int32_t/>
        <int32_t/>
        <int32_t name='relative_thickness'/>
        <int32_t name='healing_rate'/>
        <int32_t name='vascular'/>
        <int32_t name='pain_receptors'/>
        <int16_t name='tissue_shape'/>
        <int32_t/>
        <int16_t name='insulation'/>
        <stl-string name='subordinate_to_tissue'/>
        <int16_t name='tissue_mat_state'/>
        <stl-string name='tissue_shape_str'/>
    </struct-type>

    <struct-type type-name='body_detail_plan' instance-vector='$global.world.raws.body_detail_plans'>
        <stl-string name='id'/>
        <stl-vector name='add_material_name'> <pointer type-name='stl-string'/> </stl-vector>
        <stl-vector name='add_material_template'> <pointer type-name='stl-string'/> </stl-vector>
        <stl-vector name='add_tissue_name'> <pointer type-name='stl-string'/> </stl-vector>
        <stl-vector name='add_tissue_template'> <pointer type-name='stl-string'/> </stl-vector>
        <stl-vector name='unk5c'/>
        <stl-vector name='unk6c'/>
        <stl-vector name='unk7c'/>
        <stl-vector name='bp_layers_selection'/>
        <stl-vector name='bp_layers_criteria'/>
        <stl-vector name='bp_layers_tissue'/>
        <stl-vector name='bp_layers_thickness'/>
        <stl-vector name='bp_layers_position'/>
        <stl-vector name='bp_layers_over_under'/>
        <stl-vector name='bp_relsize_selection'/>
        <stl-vector name='bp_relsize_criteria'/>
        <stl-vector name='bp_relsize_value'/>
        <stl-vector name='bp_position_selection'/>
        <stl-vector name='bp_position_criteria'/>
        <stl-vector name='bp_position_value'/>
        <stl-vector name='bp_relation_selection_1'/>
        <stl-vector name='bp_relation_criteria_1'/>
        <stl-vector name='bp_relation_value_1'/>
        <stl-vector name='bp_relation_selection_2'/>
        <stl-vector name='bp_relation_criteria_2'/>
        <stl-vector name='bp_relation_extent'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
