<data-definition>
    <struct-type type-name='stockpile_settings_food'>
        <stl-vector type-name='bool' name='meat'
                    index-refers-to='(food-mat-by-idx $Meat $)'/>
        <stl-vector type-name='bool' name='fish'
                    index-refers-to='(food-mat-by-idx $Fish $)'/>
        <stl-vector type-name='bool' name='unprepared_fish'
                    index-refers-to='(food-mat-by-idx $UnpreparedFish $)'/>
        <stl-vector type-name='bool' name='egg'
                    index-refers-to='(food-mat-by-idx $Eggs $)'/>
        <stl-vector type-name='bool' name='plants'
                    index-refers-to='(food-mat-by-idx $Plants $)'/>
        <stl-vector type-name='bool' name='drink_plant'
                    index-refers-to='(food-mat-by-idx $PlantDrink $)'/>
        <stl-vector type-name='bool' name='drink_animal'
                    index-refers-to='(food-mat-by-idx $CreatureDrink $)'/>
        <stl-vector type-name='bool' name='cheese_plant'
                    index-refers-to='(food-mat-by-idx $PlantCheese $)'/>
        <stl-vector type-name='bool' name='cheese_animal'
                    index-refers-to='(food-mat-by-idx $CreatureCheese $)'/> also 26
        <stl-vector type-name='bool' name='seeds'
                    index-refers-to='(food-mat-by-idx $Seed $)'/> also 31
        <stl-vector type-name='bool' name='leaves'
                    index-refers-to='(food-mat-by-idx $Leaf $)'/> also 32
        <stl-vector type-name='bool' name='powder_plant'
                    index-refers-to='(food-mat-by-idx $PlantPowder $)'/>
        <stl-vector type-name='bool' name='powder_creature'
                    index-refers-to='(food-mat-by-idx $CreaturePowder $)'/>
        <stl-vector type-name='bool' name='glob'
                    index-refers-to='(food-mat-by-idx $Glob $)'/>
        <stl-vector type-name='bool' name='glob_paste'
                    index-refers-to='(food-mat-by-idx $Paste $)'/>
        <stl-vector type-name='bool' name='glob_pressed'
                    index-refers-to='(food-mat-by-idx $Pressed $)'/>
        <stl-vector type-name='bool' name='liquid_plant'
                    index-refers-to='(food-mat-by-idx $PlantLiquid $)'/>
        <stl-vector type-name='bool' name='liquid_animal'
                    index-refers-to='(food-mat-by-idx $CreatureLiquid $)'/>
        <stl-vector type-name='bool' name='liquid_misc'
                    index-refers-to='(food-mat-by-idx $MiscLiquid $)'/>
    </struct-type>

    <struct-type type-name='stockpile_settings_refuse'>
        <stl-vector type-name='bool' name='type' index-enum='item_type'/>
        <stl-vector type-name='bool' name='corpses'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='body_parts'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='skulls'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='bones'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='hair'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='shells'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='teeth'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='horns'
                    index-refers-to='(find-creature $)'/>
    </struct-type>

    <enum-type type-name='stockpile_category' base-type='int16_t'>
        <enum-item name='Animals'/>
        <enum-item name='Food'/>
        <enum-item name='Furniture'/>
        <enum-item name='Corpses'/>
        <enum-item name='Refuse'/>
        <enum-item name='Stone'/>

        <enum-item name='Unused6'/>

        <enum-item name='Ammo'/>
        <enum-item name='Coins'/>
        <enum-item name='Bars'/>
        <enum-item name='Gems'/>
        <enum-item name='Goods'/>
        <enum-item name='Leather'/>
        <enum-item name='Cloth'/>
        <enum-item name='Wood'/>
        <enum-item name='Weapons'/>
        <enum-item name='Armor'/>

        <enum-item name='Custom'/>
    </enum-type>

    <struct-type type-name='stockpile_settings'>
        <bitfield name='flags' base-type='uint32_t'>
            <flag-bit name='animals'/>
            <flag-bit name='food'/>
            <flag-bit name='furniture'/>
            <flag-bit name='corpses'/>
            <flag-bit name='refuse'/>
            <flag-bit name='stone'/>
            <flag-bit name='ammo'/>
            <flag-bit name='coins'/>

            <flag-bit name='bars'/>
            <flag-bit name='gems'/>
            <flag-bit name='goods'/>
            <flag-bit name='leather'/>
            <flag-bit name='cloth'/>
            <flag-bit name='wood'/>
            <flag-bit name='weapons'/>
            <flag-bit name='armor'/>
        </bitfield>

        <compound name='animals'>
            <bool name='animals_empty_cages'/>
            <bool name='animals_empty_traps'/>
            <stl-vector type-name='bool' name='enabled'
                        index-refers-to='(find-creature $)'/>
        </compound>

        <compound name='food'>
            <compound type-name='stockpile_settings_food' name='type'/>
            <bool name='prepared_meals'/>
        </compound>

        <compound name='furniture'>
            <stl-vector type-name='bool' name='type' index-enum='item_type'/>
            <stl-vector type-name='bool' name='other_mats'/> 16
            <stl-vector type-name='bool' name='mats'
                        index-refers-to='(material-by-id 0 $)'/>
            <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
            <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
            <bool name='sand_bags'/>
        </compound>

        <int32_t name='unk1'/>

        <compound name='refuse'>
            <compound type-name='stockpile_settings_refuse' name='type'/>
            <bool name='fresh_raw_hide'/>
            <bool name='rotten_raw_hide'/>
        </compound>

        <stl-vector type-name='bool' name='stone'
                    index-refers-to='(material-by-id 0 $)'/>

        <stl-vector type-name='bool' name='unk2'/>

        <compound name='ammo'>
            <stl-vector type-name='bool' name='type'
                        index-refers-to='$global.world.raws.itemdefs.ammo[$]'/>
            <stl-vector type-name='bool' name='other_mats'/> 2
            <stl-vector type-name='bool' name='mats'
                        index-refers-to='(material-by-id 0 $)'/>
            <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
            <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
        </compound>

        <stl-vector type-name='bool' name='coins'
                    index-refers-to='(material-by-id 0 $)'/>

        <stl-vector type-name='bool' name='bars_other_mats'/> 5
        <stl-vector type-name='bool' name='blocks_other_mats'/> 5
        <stl-vector type-name='bool' name='bars_mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <stl-vector type-name='bool' name='blocks_mats'
                    index-refers-to='(material-by-id 0 $)'/>

        <compound name='gems'>
            <stl-vector type-name='bool' name='rough_other_mats'
                        index-refers-to='(material-by-id $ -1)'/> 659
            <stl-vector type-name='bool' name='cut_other_mats'
                        index-refers-to='(material-by-id $ -1)'/>
            <stl-vector type-name='bool' name='rough_mats'
                        index-refers-to='(material-by-id 0 $)'/>
            <stl-vector type-name='bool' name='cut_mats'
                        index-refers-to='(material-by-id 0 $)'/>
        </compound>

        <compound name='finished_goods'>
            <stl-vector type-name='bool' name='type' index-enum='item_type'/>
            <stl-vector type-name='bool' name='other_mats'/> 17
            <stl-vector type-name='bool' name='mats'
                        index-refers-to='(material-by-id 0 $)'/>
            <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
            <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
        </compound>

        <stl-vector type-name='bool' name='leather'
                    index-refers-to='(food-mat-by-idx $Leather $)'/>

        <compound name='cloth'>
            <stl-vector type-name='bool' name='thread_silk'
                        index-refers-to='(food-mat-by-idx $Silk $)'/>
            <stl-vector type-name='bool' name='thread_plant'
                        index-refers-to='(food-mat-by-idx $PlantFiber $)'/>
            <stl-vector type-name='bool' name='thread_yarn'
                        index-refers-to='(food-mat-by-idx $Yarn $)'/>
            <stl-vector type-name='bool' name='thread_metal'
                        index-refers-to='(food-mat-by-idx $MetalThread $)'/>
            <stl-vector type-name='bool' name='cloth_silk'
                        index-refers-to='(food-mat-by-idx $Silk $)'/>
            <stl-vector type-name='bool' name='cloth_plant'
                        index-refers-to='(food-mat-by-idx $PlantFiber $)'/>
            <stl-vector type-name='bool' name='cloth_yarn'
                        index-refers-to='(food-mat-by-idx $Yarn $)'/>
            <stl-vector type-name='bool' name='cloth_metal'
                        index-refers-to='(food-mat-by-idx $MetalThread $)'/>
        </compound>

        <stl-vector type-name='bool' name='wood'
                    index-refers-to='(find-plant-raw $)'/>

        <compound name='weapons'>
            <stl-vector type-name='bool' name='weapon_type'
                        index-refers-to='$global.world.raws.itemdefs.weapons[$]'/>
            <stl-vector type-name='bool' name='trapcomp_type'
                        index-refers-to='$global.world.raws.itemdefs.trapcomps[$]'/>
            <stl-vector type-name='bool' name='other_mats'/> 11
            <stl-vector type-name='bool' name='mats'
                        index-refers-to='(material-by-id 0 $)'/>
            <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
            <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
            <bool name='usable'/>
            <bool name='unusable'/>
        </compound>

        <compound name='armor'>
            <stl-vector type-name='bool' name='body'
                        index-refers-to='$global.world.raws.itemdefs.armor[$]'/>
            <stl-vector type-name='bool' name='head'
                        index-refers-to='$global.world.raws.itemdefs.helms[$]'/>
            <stl-vector type-name='bool' name='feet'
                        index-refers-to='$global.world.raws.itemdefs.shoes[$]'/>
            <stl-vector type-name='bool' name='hands'
                        index-refers-to='$global.world.raws.itemdefs.gloves[$]'/>
            <stl-vector type-name='bool' name='legs'
                        index-refers-to='$global.world.raws.itemdefs.pants[$]'/>
            <stl-vector type-name='bool' name='shield'
                        index-refers-to='$global.world.raws.itemdefs.shields[$]'/>
            <stl-vector type-name='bool' name='other_mats'/> 11
            <stl-vector type-name='bool' name='mats'
                        index-refers-to='(material-by-id 0 $)'/>
            <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
            <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
            <bool name='usable'/>
            <bool name='unusable'/>
        </compound>

        <bool name='allow_organic'/>
        <bool name='allow_inorganic'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
