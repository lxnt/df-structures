<data-definition>
    <bitfield-type type-name='unit_flags1' base-type='uint32_t'>
        <flag-bit name='move_state'
                  comment='Can the dwarf move or are they waiting for their movement timer'/>
        <flag-bit name='dead'
                  comment='Dead (might also be set for incoming/leaving critters that are alive)'/>
        <flag-bit name='has_mood' comment='Currently in mood'/>
        <flag-bit name='had_mood' comment='Had a mood already'/>

        <flag-bit name='marauder' comment='wide class of invader/inside creature attackers'/>
        <flag-bit name='drowning' comment='Is currently drowning'/>
        <flag-bit name='merchant' comment='An active merchant'/>
        <flag-bit name='forest'
                  comment='used for units no longer linked to merchant/diplomacy, they just try to leave mostly'/>

        <flag-bit name='left' comment='left the map'/>
        <flag-bit name='rider' comment='Is riding an another creature'/>
        <flag-bit name='incoming'/>
        <flag-bit name='diplomat'/>

        <flag-bit name='zombie'/>
        <flag-bit name='skeleton'/>
        <flag-bit name='can_swap' comment='Can swap tiles during movement (prevents multiple swaps)'/>
        <flag-bit name='on_ground' comment='The creature is laying on the floor, can be conscious'/>

        <flag-bit name='projectile' comment='Launched into the air? Funny.'/>
        <flag-bit name='active_invader' comment='Active invader (for organized ones)'/>
        <flag-bit name='hidden_in_ambush'/>
        <flag-bit name='invader_origin' comment='Invader origin (could be inactive and fleeing)'/>

        <flag-bit name='coward' comment='Will flee if invasion turns around'/>
        <flag-bit name='hidden_ambusher' comment='Active marauder/invader moving inward?'/>
        <flag-bit name='invades' comment='Marauder resident/invader moving in all the way'/>
        <flag-bit name='check_flows' comment='Check against flows next time you get a chance'/>

        <flag-bit name='ridden'/>
        <flag-bit name='caged'/>
        <flag-bit name='tame'/>
        <flag-bit name='chained'/>

        <flag-bit name='royal_guard'/>
        <flag-bit name='fortress_guard'/>
        <flag-bit name='suppress_wield'/>
        <flag-bit name='important_historical_figure' comment='Is an important historical figure'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags2' base-type='uint32_t'>
        <flag-bit name='swimming'/>
        <flag-bit name='sparring'/>
        <flag-bit name='no_notify' comment='Do not notify about level gains (for embark etc)'/>
        <flag-bit name='unused'/>

        <flag-bit name='calculated_nerves'/>
        <flag-bit name='calculated_bodyparts'/>
        <flag-bit name='important_historical_figure'
                  comment='Is important historical figure (slight variation)'/>
        <flag-bit name='killed'
                  comment='Has been killed by kill function (slightly different from dead, not necessarily violent death)'/>

        <flag-bit name='cleanup_1' comment='Must be forgotten by forget function (just cleanup)'/>
        <flag-bit name='cleanup_2' comment='Must be deleted (cleanup)'/>
        <flag-bit name='cleanup_3' comment='Recently forgotten (cleanup)'/>
        <flag-bit name='for_trade' comment='Offered for trade'/>

        <flag-bit name='trade_resolved'/>
        <flag-bit name='has_breaks'/>
        <flag-bit name='gutted'/>
        <flag-bit name='circulatory_spray'/>

        <flag-bit name='locked_in_for_trading'
                  comment="Locked in for trading (it's a projectile on the other set of flags, might be what the flying was)"/>
        <flag-bit name='slaughter' comment='marked for slaughter'/>
        <flag-bit name='underworld' comment='Underworld creature'/>
        <flag-bit name='resident' comment='Current resident'/>

        <flag-bit name='cleanup_4'
                  comment='Marked for special cleanup as unused load from unit block on disk'/>
        <flag-bit name='calculated_insulation' comment='Insulation from clothing calculated'/>
        <flag-bit name='visitor_uninvited' comment='Uninvited guest'/>
        <flag-bit name='visitor'/>

        <flag-bit name='calculated_inventory' comment='Inventory order calculated'/>
        <flag-bit name='vision_good' comment='Vision -- have good part'/>
        <flag-bit name='vision_damaged' comment='Vision -- have damaged part'/>
        <flag-bit name='vision_missing' comment='Vision -- have missing part'/>

        <flag-bit name='breathing_good' comment='Breathing -- have good part'/>
        <flag-bit name='breathing_problem' comment='Breathing -- having a problem'/>
        <flag-bit name='roaming_wilderness_population_source'/>
        <flag-bit name='roaming_wilderness_population_source_not_a_map_feature'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags3' base-type='uint32_t'>
        <flag-bit name='body_part_relsize_computed'/>
        <flag-bit name='size_modifier_computed'/>
        <flag-bit name='unk2' comment='Is set to 1 every tick for non-dead creatures; cleared if removing StuckIn item.'/>
        <flag-bit name='compute_health' comment='causes the health structure to be created or updated'/>

        <flag-bit name='announce_titan' comment='Announces creature like an FB or titan.'/>
        <flag-bit name='unk5'/>
        <flag-bit name='on_crutch'/>
        <flag-bit name='weight_computed'/>

        <flag-bit name='body_temp_in_range' comment='Is set to 1 every tick for non-dead creatures.'/>
        <flag-bit name='wait_until_reveal' comment='Blocks all kind of things until tile is revealed.'/>
        <flag-bit name='scuttle'>
            <comment>
                Scuttle creature: causes creature to be killed, leaving a behind
                corpse and generating negative thoughts like a real kill.
            </comment>
        </flag-bit>
        <flag-bit name='unk11'/>

        <flag-bit name='ghostly'/>
        <flag-bit name='unk13'/>
        <flag-bit name='unk14'/>
        <flag-bit name='unk15' comment='dropped when znew >= zold'/>

        <flag-bit name='unk16' comment='something to do with werewolves?'/>
        <flag-bit name='unk17'/>
        <flag-bit name='unk18'/>
        <flag-bit name='exit_vehicle1' comment='trapavoid'/>

        <flag-bit name='exit_vehicle2' comment='trapavoid'/>
        <flag-bit name='unk21'/>
        <flag-bit name='unk22'/>
        <flag-bit name='unk23'/>
    </bitfield-type>

    <enum-type type-name='personality_facet_type'>
        <enum-item name='ANXIETY'/>
        <enum-item name='ANGER'/>
        <enum-item name='DEPRESSION'/>
        <enum-item name='SELF_CONSCIOUSNESS'/>
        <enum-item name='IMMODERATION'/>
        <enum-item name='VULNERABILITY'/>
        <enum-item name='FRIENDLINESS'/>
        <enum-item name='GREGARIOUSNESS'/>
        <enum-item name='ASSERTIVENESS'/>
        <enum-item name='ACTIVITY_LEVEL'/>
        <enum-item name='EXCITEMENT_SEEKING'/>
        <enum-item name='CHEERFULNESS'/>
        <enum-item name='IMAGINATION'/>
        <enum-item name='ARTISTIC_INTEREST'/>
        <enum-item name='EMOTIONALITY'/>
        <enum-item name='ADVENTUROUSNESS'/>
        <enum-item name='INTELLECTUAL_CURIOSITY'/>
        <enum-item name='LIBERALISM'/>
        <enum-item name='TRUST'/>
        <enum-item name='STRAIGHTFORWARDNESS'/>
        <enum-item name='ALTRUISM'/>
        <enum-item name='COOPERATION'/>
        <enum-item name='MODESTY'/>
        <enum-item name='SYMPATHY'/>
        <enum-item name='SELF_EFFICACY'/>
        <enum-item name='ORDERLINESS'/>
        <enum-item name='DUTIFULNESS'/>
        <enum-item name='ACHIEVEMENT_STRIVING'/>
        <enum-item name='SELF_DISCIPLINE'/>
        <enum-item name='CAUTIOUSNESS'/>
    </enum-type>

    <enum-type type-name='physical_attribute_type'>
        <enum-item name='STRENGTH'/>
        <enum-item name='AGILITY'/>
        <enum-item name='TOUGHNESS'/>
        <enum-item name='ENDURANCE'/>
        <enum-item name='RECUPERATION'/>
        <enum-item name='DISEASE_RESISTANCE'/>
    </enum-type>

    <enum-type type-name='mental_attribute_type'>
        <enum-item name='ANALYTICAL_ABILITY'/>
        <enum-item name='FOCUS'/>
        <enum-item name='WILLPOWER'/>
        <enum-item name='CREATIVITY'/>
        <enum-item name='INTUITION'/>
        <enum-item name='PATIENCE'/>
        <enum-item name='MEMORY'/>
        <enum-item name='LINGUISTIC_ABILITY'/>
        <enum-item name='SPATIAL_SENSE'/>
        <enum-item name='MUSICALITY'/>
        <enum-item name='KINESTHETIC_SENSE'/>
        <enum-item name='EMPATHY'/>
        <enum-item name='SOCIAL_AWARENESS'/>
    </enum-type>

    <enum-type type-name='mood_type' base-type='int16_t'>
        <enum-item name='None' value='-1'/>
        <enum-item name='Fey'/>
        <enum-item name='Secretive'/>
        <enum-item name='Possessed'/>
        <enum-item name='Macabre'/>
        <enum-item name='Fell'/>
        <enum-item name='Melancholy'/>
        <enum-item name='Raving'/>
        <enum-item name='Berserk'/>
        <enum-item name='Baby'/>
        <enum-item name='Traumatized'/>
    </enum-type>

    <enum-type type-name='ghost_type' base-type='int16_t'>
        <enum-item name='MurderousGhost'/>
        <enum-item name='SadisticGhost'/>
        <enum-item name='SecretivePoltergeist'/>
        <enum-item name='EnergeticPoltergeist'/>
        <enum-item name='AngryGhost'/>
        <enum-item name='ViolentGhost'/>
        <enum-item name='MoaningSpirit'/>
        <enum-item name='HowlingSpirit'/>
        <enum-item name='TroublesomePoltergeist'/>
        <enum-item name='RestlessHaunt'/>
        <enum-item name='ForlornHaunt'/>
    </enum-type>

    <enum-type type-name='animal_training_level' base-type='int32_t'>
        <enum-item name='SemiWild'/>
        <enum-item name='Trained'/>
        <enum-item name='WellTrained'/>
        <enum-item name='SkilfullyTrained'/>
        <enum-item name='ExpertlyTrained'/>
        <enum-item name='ExceptionallyTrained'/>
        <enum-item name='MasterfullyTrained'/>
        <enum-item name='Domesticated'/>
        <enum-item name='Unk8'/>
        <enum-item name='WildUntamed'
                   comment='Seems to be used as default when not flags1.tame'/>
    </enum-type>

    <enum-type type-name='unit_report_type' base-type='int16_t'>
        <enum-item name='Combat'/>
        <enum-item name='Sparring'/>
        <enum-item name='Hunting'/>
    </enum-type>

    <enum-type type-name='skill_rating' base-type='int32_t'>
        <enum-attr name='xp_threshold' type-name='uint32_t'/>
        <enum-attr name='caption'/>

        <enum-item name='Dabbling'>
            <item-attr name='xp_threshold' value='500'/>
            <item-attr name='caption' value='Dabbling'/>
        </enum-item>
        <enum-item name='Novice'>
            <item-attr name='xp_threshold' value='600'/>
            <item-attr name='caption' value='Novice'/>
        </enum-item>
        <enum-item name='Adequate'>
            <item-attr name='xp_threshold' value='700'/>
            <item-attr name='caption' value='Adequate'/>
        </enum-item>
        <enum-item name='Competent'>
            <item-attr name='xp_threshold' value='800'/>
            <item-attr name='caption' value='Competent'/>
        </enum-item>
        <enum-item name='Skilled'>
            <item-attr name='xp_threshold' value='900'/>
            <item-attr name='caption' value='Skilled'/>
        </enum-item>
        <enum-item name='Proficient'>
            <item-attr name='xp_threshold' value='1000'/>
            <item-attr name='caption' value='Proficient'/>
        </enum-item>
        <enum-item name='Talented'>
            <item-attr name='xp_threshold' value='1100'/>
            <item-attr name='caption' value='Talented'/>
        </enum-item>
        <enum-item name='Adept'>
            <item-attr name='xp_threshold' value='1200'/>
            <item-attr name='caption' value='Adept'/>
        </enum-item>
        <enum-item name='Expert'>
            <item-attr name='xp_threshold' value='1300'/>
            <item-attr name='caption' value='Expert'/>
        </enum-item>
        <enum-item name='Professional'>
            <item-attr name='xp_threshold' value='1400'/>
            <item-attr name='caption' value='Professional'/>
        </enum-item>
        <enum-item name='Accomplished'>
            <item-attr name='xp_threshold' value='1500'/>
            <item-attr name='caption' value='Accomplished'/>
        </enum-item>
        <enum-item name='Great'>
            <item-attr name='xp_threshold' value='1600'/>
            <item-attr name='caption' value='Great'/>
        </enum-item>
        <enum-item name='Master'>
            <item-attr name='xp_threshold' value='1700'/>
            <item-attr name='caption' value='Master'/>
        </enum-item>
        <enum-item name='HighMaster'>
            <item-attr name='xp_threshold' value='1800'/>
            <item-attr name='caption' value='High Master'/>
        </enum-item>
        <enum-item name='GrandMaster'>
            <item-attr name='xp_threshold' value='1900'/>
            <item-attr name='caption' value='Grand Master'/>
        </enum-item>
        <enum-item name='Legendary'>
            <item-attr name='xp_threshold' value='2000'/>
            <item-attr name='caption' value='Legendary'/>
        </enum-item>
        <enum-item name='Legendary1'>
            <item-attr name='xp_threshold' value='2100'/>
            <item-attr name='caption' value='Legendary+1'/>
        </enum-item>
        <enum-item name='Legendary2'>
            <item-attr name='xp_threshold' value='2200'/>
            <item-attr name='caption' value='Legendary+2'/>
        </enum-item>
        <enum-item name='Legendary3'>
            <item-attr name='xp_threshold' value='2300'/>
            <item-attr name='caption' value='Legendary+3'/>
        </enum-item>
        <enum-item name='Legendary4'>
            <item-attr name='xp_threshold' value='2400'/>
            <item-attr name='caption' value='Legendary+4'/>
        </enum-item>
        <enum-item name='Legendary5'>
            <item-attr name='caption' value='Legendary+5'/>
        </enum-item>
    </enum-type>

    <struct-type type-name='unit' key-field='id' instance-vector='$global.world.units.all'>
        <compound type-name='language_name' name='name'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
            (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <stl-string name='custom_profession'/>

        <enum base-type='int16_t' name='profession' type-name='profession' init-value='STANDARD'/>
        <enum base-type='int16_t' name='profession2' type-name='profession' init-value='STANDARD'/>

        <int32_t name='race' ref-target='creature_raw'/>

        <compound name='pos' type-name='coord'/>

        <compound name='idle_area' type-name='coord'>
            <comment>
                E.g. for a dead miner, holds the place where he
                was likely hanging around when he got the command
                to mine in an aquifer.
            </comment>
        </compound>
        <int32_t name='idle_area_threshold' init-value='3'/>
        <int16_t name='idle_area_unk_a0'/>

        <compound name='unknown1'>
            <padding size='2'/>
            <int16_t name='unk_a4a'/>
            <int16_t name='unk_a4b'/>
        </compound>

        <compound name='path'>
            <compound name='dest' type-name='coord'/>

            <int16_t name='unk_ae' comment='-1 unless dest valid'/>

            <compound name='path' type-name='coord_path'/>
        </compound>

        <compound name='flags1' type-name='unit_flags1'/>
        <compound name='flags2' type-name='unit_flags2'/>
        <compound name='flags3' type-name='unit_flags3'/>

        <compound name='meeting'>
            <enum name='role' base-type='int8_t'>
                <enum-item name="AttendMeeting" value="1"/>
                <enum-item name="ConductMeeting"/>
            </enum>
            <int32_t name='target_entity' ref-target='historical_entity'/>
            <enum name='target_role' type-name='entity_position_responsibility' base-type='int16_t'/>
            <padding size='2'/>
        </compound>

        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>
        <int8_t name='sex' init-value='-1' comment='-1 n/a, 0 female, 1 male'/>

        <int32_t name='id'/>

        <int16_t name='unk_100'/>

        <enum name='training_level' base-type='int32_t'
              type-name='animal_training_level' init-value='WildUntamed'/>
        <int32_t name='unk_104' init-value='-1'/>

        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='population_id' ref-target='entity_population'/>
        <int32_t comment='v0.34.01' init-value='-1'/>
        <int32_t name='invasion_id' ref-target='invasion_info'/>

        <compound name='unknown3'>
            <compound name='unk_path' type-name='coord_path'/>

            <uint32_t name='unk_144'/>
        </compound>

        <stl-vector name='specific_refs'>
            <pointer type-name='specific_ref'/>
        </stl-vector>
        <stl-vector name='general_refs'>
            <pointer type-name='general_ref'/>
        </stl-vector>

        <compound name='military'>
            <int32_t name='squad_id' ref-target='squad'/>
            <int32_t name='squad_position' init-value='-1'/>
            <int32_t name='patrol_cooldown'/>
            <int32_t name='patrol_timer'/>

            <int16_t name='cur_uniform'/>

            <stl-vector name='unk_items' type-name='int32_t'
                        ref-target='item' comment='v0.34.06'/>

            <static-array name='uniforms' count='4'>
                <stl-vector>
                    <int32_t ref-target='item'/>
                </stl-vector>
            </static-array>

            <bitfield name='pickup_flags'>
                <flag-bit name='update'/>
            </bitfield>

            <stl-vector name='uniform_pickup'>
                <int32_t ref-target='item'/>
            </stl-vector>
            <stl-vector name='uniform_drop'>
                <int32_t ref-target='item'/>
            </stl-vector>

            <stl-vector name='individual_drills'>
                <int32_t ref-target='activity_entry'/>
            </stl-vector>
        </compound>

        <compound name='animal'>
            <compound name='population' type-name='world_population_ref'/>

            <int32_t name='leave_countdown'
                      comment='once 0, it heads for the edge and leaves'/>
            <int32_t name='vanish_countdown' comment='once 0, it vanishes in a puff of smoke'/>
        </compound>

        <enum base-type='int16_t' name='mood' type-name='mood_type' init-value='None'/>
        <int16_t name='unk_18e'/>

        <compound name='relations'>
            <uint32_t name='pregnancy_timer'/>
            <pointer name='pregnancy_ptr' type-name='unit_genes'/>
            <int16_t name='pregnancy_mystery' init-value='-1' comment='-1 = crash, 1 = many cats'/>
            <enum base-type='int16_t' name='mood_copy' type-name='mood_type' init-value='None'
                  comment='copied from mood type upon entering strange mood'/>
            <pointer name='ghost_info' type-name='unit_ghost_info'/>

            <int32_t init-value='-1' comment='v0.34.01'/>

            <int32_t name='birth_year' init-value='-1'/>
            <int32_t name='birth_time' init-value='-1'/>
            <int32_t name='curse_year' init-value='-1' comment='v0.34.01'/>
            <int32_t name='curse_time' init-value='-1' comment='v0.34.01'/>

            <int32_t name='birth_year_bias' init-value='0' comment='v0.34.01'/>
            <int32_t name='birth_time_bias' init-value='0' comment='v0.34.01'/>

            <int32_t name='old_year' init-value='-1' comment='could there be a death of old age time??'/>
            <int32_t name='old_time' init-value='-1'/>

            <pointer type-name='unit' name='following'/>
            <uint16_t name='unk_238' comment='invalid unless following'/>

            <int32_t name='pet_owner_id' ref-target='unit'/>
            <int32_t name='spouse_id' ref-target='unit'
                     comment='not used in relationship screen..'/>
            <int32_t name='mother_id' ref-target='unit'/>
            <int32_t name='father_id' ref-target='unit'/>
            <int32_t name='last_attacker_id' ref-target='unit'/>
            <int32_t name='group_leader_id' ref-target='unit'
                     comment='used by goblins, adv mode companions etc'/>
            <int32_t name='draggee_id' ref-target='unit'
                     comment='unit being dragged by this one'/>
            <int32_t name='dragger_id' ref-target='unit'
                     comment='unit that drags this one'/>
            <int32_t name='rider_mount_id' ref-target='unit'/>
            <int32_t name='lover_id' ref-target='unit'/>
            <int16_t name='unk_264'/>
        </compound>

        <compound name='last_hit' type-name='history_hit_item'/>

        <int32_t name='riding_item_id' ref-target='item' comment='v0.34.08'/>

        <stl-vector name='inventory'>
            <pointer type-name='unit_inventory_item'/>
        </stl-vector>

        <stl-vector name='owned_items'>
            <int32_t ref-target='item'/>
        </stl-vector>
        <stl-vector name='traded_items' comment='items brought to trade depot'>
            <int32_t ref-target='item'/>
        </stl-vector>
        <stl-vector name='owned_buildings'>
            <pointer type-name='building'/>
        </stl-vector>
        <stl-vector name='corpse_parts' comment='entries remain even when items are destroyed'>
            <int32_t ref-target='item'/>
        </stl-vector>

        <compound name='job'>
            <int32_t name='account'/>
            <int32_t name='satisfaction' comment='guess'/>
            <pointer type-name='unit' name='hunt_target'/>
            <pointer type-name='building' name='destroy_target'/>
            <compound name='last_attack_dir' type-name='coord2d'/>
            <uint16_t name='unk_2ec'/> reset to 0 together with x,y on job_counter reroll, so maybe z
            <uint16_t name='siege_morale' init-value='100' comment='guess'/>
            <uint16_t name='unk_2f0_cntr'/> // increments every tick
            <pointer comment='df_job' name='current_job' type-name='job'/>
            <enum base-type='int16_t' type-name='job_skill' name='mood_skill'/>
            <uint32_t name='unk_2fc'/> in advmode, lets non-player unit have job_counter update if nonzero
            <int32_t name='mood_timeout' comment='counts down from 50000, insanity upon reaching zero'/>
            <uint32_t name='unk_304'/>
        </compound>

        <compound name='body'>
            <compound name='components' type-name='body_component_info'/>

            <stl-vector name='wounds'>
                <pointer type-name='unit_wound'/>
            </stl-vector>
            <int32_t name='wound_next_id' init-value='1'/>

            <static-array name='unk_39c' count='10'>
                <int32_t init-value='-1'/>
            </static-array>

            <pointer name='body_plan' type-name='caste_body_info'/>

            <int16_t name='weapon_bp' refers-to='$$._parent.body_plan.body_parts[$]' init-value='-1'/>

            <static-array type-name='unit_attribute' name='physical_attrs'
                          count='6' index-enum='physical_attribute_type'/>

            <compound name='size_info' type-name='body_size_info'/>

            <uint32_t name='blood_max'/>
            <uint32_t name='blood_count'/>

            <int32_t name='infection_level'
                      comment='GETS_INFECTIONS_FROM_ROT sets; DISEASE_RESISTANCE reduces; >=300 causes bleeding'/>

            <stl-vector name='spatters'>
                <pointer type-name='unit_spatter'/>
            </stl-vector>
        </compound>

        <compound name='appearance'>
            <stl-vector name='body_modifiers' type-name='int32_t'
                        index-refers-to='$$._global.caste.ref-target.body_appearance_modifiers[$]'/>
            <stl-vector name='bp_modifiers' type-name='int32_t'
                        index-refers-to='$$._global.caste.ref-target.bp_appearance.modifier_idx[$].refers-to'/>

            <int32_t name='size_modifier' comment='product of all H/B/LENGTH body modifiers, in %'/>

            -- Something for bp_appearance.layers_*
            <stl-vector type-name='int16_t' name='tissue_style'
                        index-refers-to='$$._global.caste.ref-target.bp_appearance.style_layer_idx[$].refers-to'/>
            <stl-vector type-name='int32_t' name='tissue_style_civ_id'
                        ref-target='historical_entity'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'/>
            <stl-vector type-name='int32_t' name='tissue_style_id'
                        ref-target='entity_tissue_style'
                        aux-value='$$._parent.tissue_style_civ_id[$._key]'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'/>
            <stl-vector type-name='int32_t' name='tissue_style_type'
                        refers-to='(find-by-id $$._global.caste.ref-target.tissue_styles $id $)'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'/>
            <stl-vector type-name='int32_t' name='tissue_length'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'
                        comment='description uses bp_modifiers[style_list_idx[index]]'/>

            <compound name='genes' type-name='unit_genes'/>

            <stl-vector name='colors' type-name='int32_t'/>
        </compound>

        <compound name='counters'>
            <int32_t name='think_counter'/> // 53c decrements every job_counter reroll, set when changing jobs
            <int32_t name='job_counter'/> // 540 current_job unit/walk done when reach -1, decremented every tick
            <int32_t name='swap_counter' comment='dec per job_counter reroll, can_swap if 0'/>

            <enum name='death_cause' base-type='int16_t' type-name='death_type'/>
            <int32_t name='death_id' ref-target='death_info' comment='v0.34.01'/>

            <int16_t name='winded'/>
            <int16_t name='stunned'/> // 54c decrements every tick, unstun at 0
            <int16_t name='unconscious'/>
            <int16_t name='unk_550'/>
            <int16_t name='webbed'/>

            -- When gutted:
            <compound name='guts_trail1' type-name='coord'/>
            <compound name='guts_trail2' type-name='coord'/>

            <int16_t name='soldier_mood_countdown' init-value='300' comment='plus a random amount' />
            <enum name='soldier_mood' base-type='int16_t' init-value='None'>
                <enum-item name='None' value='-1'/>
                <enum-item name='MartialTrance'/>
                <enum-item name='Enranged'/>
                <enum-item name='Tantrum'/>
            </enum>

            <uint32_t name='pain'/>
            <uint32_t name='nausea'/>
            <uint32_t name='dizziness'/>
        </compound>

        <compound name='curse'>
            <compound name='add_tags1' type-name='cie_add_tag_mask1'/>
            <compound name='rem_tags1' type-name='cie_add_tag_mask1'/>
            <compound name='add_tags2' type-name='cie_add_tag_mask2'/>
            <compound name='rem_tags2' type-name='cie_add_tag_mask2'/>

            <bool name='name_visible' comment='v0.34.01'/>
            <stl-string name='name' comment='v0.34.01'/>
            <stl-string name='name_plural' comment='v0.34.01'/>
            <stl-string name='name_adjective' comment='v0.34.01'/>

            <uint32_t name='sym_and_color1' comment='v0.34.01' init-value='0x400'/>
            <uint32_t name='sym_and_color2' comment='v0.34.01' init-value='0x400'/>
            <uint32_t name='flash_period' comment='v0.34.01'/>
            <uint32_t name='flash_time2' comment='v0.34.01'/>

            <stl-vector name='body_appearance' type-name='int32_t'
                        index-refers-to='$$._global.caste.ref-target.body_appearance_modifiers[$]'/>
            <stl-vector name='bp_appearance' type-name='int32_t' comment='v0.34.01; guess!'
                        index-refers-to='$$._global.caste.ref-target.bp_appearance.modifier_idx[$].refers-to'/>

            <uint32_t name='speed_add' comment='v0.34.01'/>
            <uint32_t name='speed_mul_percent' comment='v0.34.01' init-value='100'/>

            <pointer name='attr_change' comment='v0.34.01'>
                <static-array name='phys_att_perc' type-name='int32_t'
                              count='6' index-enum='physical_attribute_type'/>
                <static-array name='phys_att_add' type-name='int32_t'
                              count='6' index-enum='physical_attribute_type'/>
                <static-array name='ment_att_perc' type-name='int32_t'
                              count='13' index-enum='mental_attribute_type'/>
                <static-array name='ment_att_add' type-name='int32_t'
                              count='13' index-enum='mental_attribute_type'/>
            </pointer>
            <uint32_t comment='v0.34.01' init-value='100'/>

            <stl-vector comment='v0.34.01'/>
            <stl-vector comment='v0.34.01'/>
            <stl-vector comment='v0.34.01'/>
            <int32_t name='time_on_site' comment='v0.34.01'/>
            <stl-vector type-name='int32_t' comment='v0.34.01'/>
            <stl-vector type-name='int32_t' comment='v0.34.01'/>
        </compound>

        <compound name='counters2'>
            <uint32_t name='paralysis'/>
            <uint32_t name='numbness'/>
            <uint32_t name='fever'/>
            <uint32_t name='exhaustion'/>

            <uint32_t name='hunger_timer'/>
            <uint32_t name='thirst_timer'/>
            <uint32_t name='sleepiness_timer'/>

            <uint32_t name='stomach_content'/>
            <uint32_t name='stomach_food'/>
            <uint32_t name='vomit_timeout' comment='blocks nausea causing vomit'/>

            <uint32_t name='stored_fat' comment='hunger leads to death only when 0'/>
            <uint32_t name='unk_59c'/>
        </compound>

        <compound name='status'>
            <stl-vector name='misc_traits'>
                <pointer type-name='unit_misc_trait'/>
            </stl-vector>

            <pointer name='eat_history'>
                <compound name='food'>
                    <stl-vector name='item_type'>
                        <enum base-type='int16_t' type-name='item_type'/>
                    </stl-vector>
                    <stl-vector name='item_subtype' type-name='int16_t'/>
                    <compound name='material' type-name='material_vec_ref'/>
                    <stl-vector name='year' type-name='int32_t'/>
                    <stl-vector name='year_time' type-name='int32_t'/>
                </compound>
                <compound name='drink'>
                    <stl-vector name='item_type'>
                        <enum base-type='int16_t' type-name='item_type'/>
                    </stl-vector>
                    <stl-vector name='item_subtype' type-name='int16_t'/>
                    <compound name='material' type-name='material_vec_ref'/>
                    <stl-vector name='year' type-name='int32_t'/>
                    <stl-vector name='year_time' type-name='int32_t'/>
                </compound>
            </pointer>

            <int32_t name='demand_timeout' init-value='1000'/>
            <int32_t name='mandate_timeout' init-value='1000'/>

            <stl-vector name='attacker_ids'>
                <int32_t ref-target='unit'/>
            </stl-vector>
            <stl-vector name='attacker_unk' type-name='int16_t'/>

            <uint8_t name='unk_5dc'/>

            <compound type-name='language_name' name='artifact_name'/>
            <stl-vector name='souls'>
                <pointer type-name='unit_soul'/>
            </stl-vector>
            <pointer name='current_soul' type-name='unit_soul'/>

            <stl-vector name='demands'>
                <pointer type-name='unit_demand'/>
            </stl-vector>

            <static-array type-name='bool' name='labors' index-enum='unit_labor' count='94'/>

            <stl-vector name='wrestle_items'>
                <pointer type-name='unit_item_wrestle'/>
            </stl-vector>
            <stl-vector name='observed_traps' type-name='int32_t' ref-target='building'/>

            <stl-vector name='recent_events'>
                <pointer type-name='unit_thought'/>
            </stl-vector>

            <stl-vector name='unk_700'/>

            <int32_t name='happiness' init-value='100'/>
            <int16_t name='insanity_chance' comment='increases gradually when miserable'/>

            <stl-vector name='unk_718'/>
            <stl-vector name='unk_728'/>

            <stl-vector name='acquaintances' pointer-type='unit_acquaintance'/>

            <stl-vector name='unk_748'/>

            <uint16_t name='unk_758'/>

            -- coordinates, and a set of coordinate vectors
            <compound name='unk_75a' type-name='coord'/>
            <compound name='unk_760' type-name='coord_path'/>
        </compound>

        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='hist_figure_id2' ref-target='historical_figure'
                 comment='used for ghost in AttackedByDead thought'/>

        <compound name='status2'>
            <int16_t name='limbs_stand_max'/>
            <int16_t name='limbs_stand_count'/>
            <int16_t name='limbs_grasp_max'/>
            <int16_t name='limbs_grasp_count'/>
            <int16_t name='limbs_fly_max'/>
            <int16_t name='limbs_fly_count'/>

            <stl-vector name='body_part_temperature'>
                <pointer name='temperature' type-name='temperaturest'/>
            </stl-vector>

            <uint32_t name='unk_7b4'/> set to 0 after move

            <compound type-name='tile_designation' name='liquid_type'/>
            <uint8_t name='liquid_depth'/>

            <int32_t name='unk_7c0' init-value='-1'/>
        </compound>

        <compound name='unknown7'>
            <stl-vector name='unk_7c4'/>
            <stl-vector comment='v0.34.01'/>
        </compound>

        <compound name='syndromes'>
            <stl-vector name='active'>
                <pointer type-name='unit_syndrome'/>
            </stl-vector>
            <stl-vector name='unk_7d4'>
                <int32_t ref-target='syndrome'/>
            </stl-vector>
            <stl-vector name='unk_7e4' type-name='int16_t'/>
        </compound>

        <compound name='reports'>
            <static-array name='log' count='3' index-enum='unit_report_type'>
                <stl-vector type-name='int32_t' ref-target='report'/>
            </static-array>

            -- Garbage when the matching vector is empty:
            <static-array type-name='int32_t' name='last_year' count='3' index-enum='unit_report_type'/>
            <static-array type-name='int32_t' name='last_year_tick' count='3' index-enum='unit_report_type'/>
        </compound>

        <pointer name='health' type-name='unit_health_info'/>

        <stl-vector name='used_items'>
            <comment>Contains worn clothes, armor, weapons, arrows fired by archers</comment>
            <pointer type-name='unit_item_use'/>
        </stl-vector>

        <stl-vector name='adventurer_knows' comment='if not, no names'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        <compound name='enemy'>
            <stl-vector name='unk1' comment='v0.34.01'/>

            <pointer name='undead' comment='v0.34.01'>
                <compound>
                    <int32_t/>
                    <int32_t/>
                    <int32_t/>
                    <int32_t/>
                    <int32_t/>
                    <int16_t/>
                    <stl-string/>
                </compound>
            </pointer>
            <int32_t name='were_race' ref-target='creature_raw'/>
            <int32_t name='were_caste' ref-target='caste_raw' aux-value='$$.were_race'/>
            <int32_t name='normal_race' ref-target='creature_raw'/>
            <int32_t name='normal_caste' ref-target='caste_raw' aux-value='$$.normal_race'/>
            <int32_t name='unk3' init-value='-1' comment='v0.34.01'/>

            <stl-vector name='unk_850'/>
            <stl-vector name='unk_860' type-name='int32_t'/>

            <int32_t name='enemy_status_slot' init-value='-1'/>
            <int32_t name='unk_874_cntr'/> // age ? incremented every tick

            <stl-vector name='body_part_878' type-name='uint8_t'/>
            <stl-vector name='body_part_888' type-name='uint8_t'/>
            <stl-vector name='body_part_relsize' type-name='int32_t' comment='with modifiers'/>
            <stl-vector name='body_part_8a8' type-name='uint8_t'/>
            <stl-vector name='body_part_base_ins' type-name='uint16_t'/>
            <stl-vector name='body_part_clothing_ins' type-name='uint16_t'/>
            <stl-vector name='body_part_8d8' type-name='uint16_t'/>

            <stl-vector name='unk_8e8'/> // items ids?

            <stl-vector type-name='uint16_t' name='unk_8f8'/> // same size as 8e8, soldier related?
        </compound>

        <compound name='recuperation'>
            <stl-vector name='healing_rate' type-name='int32_t'/>

            <int32_t name='effective_rate' init-value='-1'/>
            <int32_t name='tendons_heal'/>
            <int32_t name='ligaments_heal'/>
        </compound>

        <int32_t name='weight'/>
        <int32_t name='weight_fraction' comment='1e-6'/>

        <stl-vector name='burrows'>
            <int32_t ref-target='burrow'/>
        </stl-vector>

        <int32_t name='combat_side_id'/>
    </struct-type>

    <enum-type type-name='ghost_goal' base-type='int16_t'>
        <enum-item name='None' value='-1'/>
        <enum-item name='ScareToDeath'/>
        <enum-item name='Stun'/>
        <enum-item name='Batter'/>
        <enum-item name='Possess'/>
        <enum-item name='MisplaceItem'/>
        <enum-item name='Haunt'/>
        <enum-item name='Torment'/>
        <enum-item name='ToppleBuilding'/>
    </enum-type>

    <struct-type type-name='unit_ghost_info'>
        <enum base-type='int16_t' name='type' type-name='ghost_type'/>
        <enum base-type='int16_t' name='type2' type-name='ghost_type'
              comment='seems to have same value as type'/>

        <enum base-type='int16_t' name="goal" type-name='ghost_goal'/>

        <compound name='target' is-union='true'>
            <int32_t name="unit" ref-target='unit'/>
            <int32_t name="item" ref-target='item'/>
            <int32_t name="building" ref-target='building'/>
        </compound>

        <compound name='misplace_pos' type-name='coord'/>

        <int32_t name="action_timer" init-value='403200' comment='time since last action'/>
        <int32_t name="unk_18"/>

        <bitfield name='flags'>
            <flag-bit name='announced'/>
            <flag-bit name='was_at_rest'/>
        </bitfield>

        <int32_t name="death_x" comment='in tiles, global to world'/>
        <int32_t name="death_y"/>
        <int32_t name="death_z"/>
    </struct-type>

    <struct-type type-name='unit_genes'>
        <!-- length matches body_appearance_modifiers + tissue_appearance_modifiers -->
        <df-array name='appearance' type-name='uint8_t'/>
        <!-- two items per color modifier -->
        <df-array name="colors" type-name='int16_t'/>
    </struct-type>

    <struct-type type-name='unit_inventory_item'>
        <pointer name='item' type-name='item'/>

        <code-helper name='describe'>$.mode (describe-obj $.item)</code-helper>

        <enum base-type='int16_t' name='mode'>
            <enum-item name='Hauled'/>
            <enum-item name='Weapon' comment='also shield, crutch'/>
            <enum-item name='Worn' comment='quiver'/>
            <enum-item name='InBody'/>
            <enum-item name='Flask' comment='attached to clothing'/>
            <enum-item name='WrappedAround' comment='e.g. bandage'/>
            <enum-item name='StuckIn'/>
            <enum-item name='Unk7' comment='string descr like Worn'/>
            <enum-item name='Shouldered'/>
            <enum-item name='SewnInto'/>
        </enum>

        <int16_t name='body_part_id'
                 refers-to='$$._global._parent._global.body.body_plan.body_parts[$]'/>

        <int32_t comment='always 0'/>
        <int32_t name='wound_id' init-value='-1' comment='-1 unless suture'/>
    </struct-type>

    <struct-type type-name='unit_spatter'>
        <int16_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name="mat_index" init-value='-1'/>

        <enum type-name='matter_state' base-type='int16_t' name='mat_state'/>
        <compound name='temperature' type-name='temperaturest'/>

        <int32_t name="size"/>
        <int16_t name='body_part_id'
                 refers-to='$$._global._parent._global.body.body_plan.body_parts[$]'/>
        <int16_t name="unk_16"/>
    </struct-type>

    <struct-type type-name='unit_attribute'>
        <int32_t name='value' comment='effective = value - soft_demotion' init-value='1000'/>
        <int32_t name='max_value' init-value='2000'/>
        <int32_t name='improve_counter'
                 comment='counts to PHYS_ATT_RATES improve cost; then value++'/>
        <int32_t name='unused_counter'
                 comment='counts to PHYS_ATT_RATES unused rate; then rust_counter++'/>
        <int32_t name='soft_demotion'
                 comment='0-100; when not 0 blocks improve_counter'/>
        <int32_t name='rust_counter'
                 comment='counts to PHYS_ATT_RATES rust; then demotion_counter++'/>
        <int32_t name='demotion_counter'
                 comment='counts to PHYS_ATT_RATES demotion; then value--; soft_demotion++'/>
    </struct-type>

    <struct-type type-name='unit_syndrome'>
        <int32_t name='type' ref-target='syndrome'/>
        <int32_t name='year'/>
        <int32_t name='year_time'/>
        <int32_t name='ticks'/>
        <stl-vector type-name='int32_t'/>
        <int32_t name='unk1'/>
        <stl-vector name='symptoms'>
            <pointer>
                <int32_t name='unk1'/>
                <int32_t name='unk2'/>
                <int32_t name='ticks'/>
                <stl-vector name='target_bp' type-name='int16_t'/>
                <stl-vector name='target_layer' type-name='int16_t'/>
                <stl-vector name='target_unk1' type-name='int32_t'/>
                <stl-vector name='target_unk2' type-name='int32_t'/>
                <stl-vector name='target_ticks' type-name='int32_t'/>
                <uint32_t name='flags'/>
            </pointer>
        </stl-vector>
        <int16_t name='unk2'/>
        <bitfield name='flags'>
            cause rq_diagnosis:
            <flag-bit name='is_sick' comment='causes health.flags.needs_healthcare'/>
            <flag-bit/>
            prevent rq_diagnosis or needs_healthcare:
            <flag-bit/>
            <flag-bit/>
        </bitfield>
        <stl-vector name='unk4' type-name='int32_t'/>
    </struct-type>

    <enum-type type-name='wound_effect_type' base-type='int16_t'>
        <enum-item name='Bruise'/>
        <enum-item name='Burn'/>
        <enum-item name='Frostbite'/>
        <enum-item/>
        <enum-item name='Melting'/>
        <enum-item/>
        <enum-item name='Freezing'/>
        <enum-item/>
        <enum-item name='Necrosis'/>
        <enum-item name='Blister'/>
    </enum-type>

    <bitfield-type type-name='wound_damage_flags1'>
        <flag-bit name='cut'/>
        <flag-bit name='smashed'/>
        <flag-bit name='straight_scar'/>
        <flag-bit name='huge_dent'/>

        <flag-bit name='tendon_bruised'/>
        <flag-bit name='tendon_strained'/>
        <flag-bit name='tendon_torn'/>
        <flag-bit name='ligament_bruised'/>

        <flag-bit name='ligament_sprained'/>
        <flag-bit name='ligament_torn'/>
        <flag-bit name='motor_nerve_severed'/>
        <flag-bit name='sensory_nerve_severed'/>

        <flag-bit name='edged_damage'/>
        <flag-bit name='smashed_apart' comment='?'/>
        <flag-bit name='major_artery'/>
        <flag-bit name='guts_spilled'/>

        <flag-bit/>
        <flag-bit name='jagged_scar'/>
        <flag-bit/>
        <flag-bit name='broken'/>

        <flag-bit name='huge_dent2'/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit name='jagged_scar2'/>

        <flag-bit/>
        <flag-bit/>
        <flag-bit name='jagged_scar3'/>
        <flag-bit/>

        <flag-bit name='compound_fracture'/>
        <flag-bit name='diagnosed'/>
        <flag-bit name='artery'/>
        <flag-bit name='overlapping_fracture'/>
    </bitfield-type>

    <bitfield-type type-name='wound_damage_flags2'>
        <flag-bit name='needs_setting'/>
        <flag-bit name='unk1'/>
    </bitfield-type>

    <struct-type type-name='unit_wound' key-field='id'>
        <int32_t name="id"/>

        <stl-vector name="parts">
            <pointer>
                <int32_t name="global_layer_idx"
                         refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
                <int16_t name="body_part_id"
                         refers-to='$$._global._upglobal.caste.ref-target.body_info.body_parts[$]'/>
                <int16_t name="layer_idx"
                         refers-to='$$._parent.body_part_id.refers-to.layers[$]'/>

                Contact area of the wound. Is initially the lesser of the weapon or body
                part contact areas. It grows with cumulative hits. Body parts and non-weapon
                items have contact=(size/10)^(2/3).
                <int32_t name="contact_area"/>
                <int16_t name="surface_perc"/>

                This is strain. For skin/muscle/fat it is usually around 50000, and for
                bone 100-113. This number heals over time towards 0. A wound that only
                has strain is called "dented".
                <int32_t name="strain"/>

                <stl-vector name="effect_perc1" type-name='int16_t'/>
                <stl-vector name="effect_perc2" type-name='int16_t'/>
                <stl-vector name="effect_type">
                    <enum base-type='int16_t' type-name='wound_effect_type'/>
                </stl-vector>

                A random percentage from 0-100, only for edged damage cases. Otherwise 0.
                Values above 50 turn straight_scar description into curving scar.
                <int16_t name="edged_curve_perc"/>

                <compound name="flags1" type-name='wound_damage_flags1'/>
                <compound name="flags2" type-name='wound_damage_flags2'/>

                <int32_t name="bleeding"/>
                <int32_t name="pain"/>
                <int32_t name="nausea"/>
                <int32_t name="dizziness"/>
                <int32_t name="paralysis"/>
                <int32_t name="numbness"/>
                <int32_t name="swelling"/>
                <int32_t name="impaired"/>

                This 0-100 percentage is related to cumulative damage. In cases where
                multiple axe hacks are necessary for severing a limb, it must reach 100
                before severing occurs. In cases where a weapon can't completely penetrate
                a tissue, it is related to the weapon's penetration number. This percentage
                heals towards 0 over time.
                <int16_t name="cur_penetration_perc"/>
                <int16_t name="max_penetration_perc"/>

                <int32_t name="jammed_layer_idx" comment='in compound fracture'
                         refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
            </pointer>
        </stl-vector>

        <int32_t name="age"/>

        <int32_t name="unit_id" ref-target='unit'/>
        <int32_t name="hist_figure_id" ref-target='historical_figure'/>

        <bitfield name="flags">
            <flag-bit name='severed_part'/>
            <flag-bit name='mortal_wound'/>
            <flag-bit name='stuck_weapon'/>
            <flag-bit name='diagnosed'/>
            <flag-bit name='sutured'/>
            <flag-bit name='infection'/>
        </bitfield>

        <int32_t name="syndrome_id" ref-target='syndrome'/>

        <int32_t name="unk_28"/>
        <int32_t name="unk_2c"/>
        <int32_t name="unk_30"/>
        <int32_t name="unk_34"/>
        <int32_t name="unk_38"/>
        <int32_t name="unk_3c"/>
        <pointer name="unk_40"/>
    </struct-type>

    <enum-type base-type='int16_t' type-name='misc_trait_type'>
        <enum-attr name='tag'/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='Migrant'/>

        <enum-item name='RoomComplaint'/>
        <enum-item name='UnnamedResident' comment='upon reaching zero, resident creature gets named'/>
        <enum-item/>
        <enum-item name='ClaimTrinketCooldown'/>
        <enum-item name='ClaimClothingCooldown'/>
        <enum-item name='WantsDrink'>
            <item-attr name='tag' value='ALCOHOLIC'/>
        </enum-item>
        <enum-item name='LikesOutdoors'>
            <item-attr name='tag' value='MOUNTAIN'/>
        </enum-item>
        <enum-item name='Hardened'>
            <item-attr name='tag' value='COMBATHARDNESS'/>
        </enum-item>

        <enum-item name='TimeSinceBreak'>
            <item-attr name='tag' value='TIME_SINCE_BREAK'/>
        </enum-item>
        <enum-item name='OnBreak'>
            <item-attr name='tag' value='ON_BREAK'/>
        </enum-item>
        <enum-item/>
        <enum-item name='CaveAdapt'>
            <item-attr name='tag' value='CAVE_ADAPT'/>
        </enum-item>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='IdleAreaCooldown'/>
        <enum-item/>

        <enum-item name='PartiedOut'>
            <item-attr name='tag' value='PARTIED_OUT'/>
        </enum-item>
        <enum-item/>
        <enum-item/>
        <enum-item name='WoundsCleaned'/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='MilkCounter'>
            <item-attr name='tag' value='MILK_COUNTER'/>
        </enum-item>
        <enum-item name='HadDrill'/>
        <enum-item name='CompletedDrill'/>
        <enum-item name='EggSpent'>
            <item-attr name='tag' value='EGG_SPENT'/>
        </enum-item>

        <enum-item name='GroundedAnimalAnger'>
            <item-attr name='tag' value='GROUNDED_ANIMAL_ANGER'/>
        </enum-item>
        <enum-item/>
        <enum-item name='TimeSinceSuckedBlood'>
            <item-attr name='tag' value='TIME_SINCE_SUCKED_BLOOD'/>
        </enum-item>
        <enum-item name='DrinkingBlood'>
            <item-attr name='tag' value='DRINKING_BLOOD'/>
        </enum-item>
        <enum-item/>
        <enum-item/>
        <enum-item name='RevertWildTimer' comment='one trigger => --training_level'/>
    </enum-type>

    <struct-type type-name='unit_misc_trait'>
        <enum base-type='int16_t' type-name='misc_trait_type' name='id'/>

        <code-helper name='describe'>(fmt "id=~A value=~A" $.id $.value)</code-helper>

        <int32_t name='value'/>
    </struct-type>

    <struct-type type-name='unit_acquaintance'>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='strength' comment='>= 30 -> long-term'/>
        <int32_t name='timer' comment='+1 per 10 frames; limit at 1 year'/>
        <bitfield name='flags'>
            <flag-bit name='is_friend'/>
            <flag-bit name='is_grudge'/>
            <flag-bit name='is_bonded'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='unit_thought'>
        <enum base-type='int16_t' name='type' type-name='unit_thought_type'/>
        <int32_t name="age" comment='+1 per frame'/>
        <int32_t name="subtype" init-value='-1'/>
        <int32_t name="severity"/>
    </struct-type>

    <struct-type type-name='unit_item_wrestle'>
        <int32_t name="unit" ref-target='unit'/>
        <int32_t name="self_bp"
                 refers-to='$$._parent._upglobal.body.body_plan.body_parts[$]'/>
        <int32_t name="other_bp"
                 refers-to='$$._parent.unit.ref-target.body.body_plan.body_parts[$]'/>
        <int32_t name="unk_c" init-value='-1'/>
        <int32_t name="unk_10" init-value='-1'/>
        <int32_t name='item1' ref-target='item'/>
        <int32_t name='item2' ref-target='item'/>
        <int16_t name="unk_1c"/>
        <int8_t name="unk_1e" comment='1 grabs, -1 grabbed'/>
        <int32_t name="unk_20" init-value='-1'/>
    </struct-type>

    <struct-type type-name='unit_item_use' key-field='id'>
        <int32_t name="id" ref-target='item'/>
        <int32_t name="time_in_use"/>
        <int32_t name="has_grown_attached"/>
        <int32_t name="affection_level" comment='min 50 for attached, 1000 for name'/>
    </struct-type>

    <bitfield-type type-name='unit_health_flags'>
        <flag-bit name='rq_diagnosis'/>
        <flag-bit name='needs_recovery' comment='needs diagnosis but cannot walk'/>
        <flag-bit name='needs_healthcare'
                  comment='???; set when rq_diagnosis is, and not blocked by having a diagnosis'/>
        <flag-bit name='rq_immobilize'/>

        <flag-bit name='rq_dressing'/>
        <flag-bit name='rq_cleaning'/>
        <flag-bit name='rq_surgery'/>
        <flag-bit name='rq_suture'/>

        <flag-bit name='rq_setting'/>
        <flag-bit name='rq_traction'/>
        <flag-bit name='rq_crutch'/>

        due to a field initialization bug, higher bits contain garbage
    </bitfield-type>

    <bitfield-type type-name='unit_bp_health_flags'>
        <flag-bit name='rq_immobilize'/>
        <flag-bit name='rq_dressing'/>
        <flag-bit name='rq_cleaning'/>
        <flag-bit name='rq_surgery'/>
        <flag-bit name='rq_suture'/>
        <flag-bit name='rq_setting'/>
        <flag-bit name='rq_traction'/>
        <flag-bit name='inoperable_rot'/>

        <flag-bit name='needs_bandage' comment='used to remove once not needed'/>
        <flag-bit name='needs_cast' comment='used to remove once not needed'/>
    </bitfield-type>

    <struct-type type-name='unit_health_info'>
        <int32_t name="unit_id" ref-target='unit'/>

        <compound name="flags" type-name='unit_health_flags'/>
        <stl-vector name="body_part_flags" type-name='unit_bp_health_flags'/>

        <int16_t name="unk_18"/>
        <int16_t name="unk_1a"/>
        <int16_t name="unk_1c"/>
        <int16_t name="unk_1e"/>
        <int16_t name="unk_20"/>

        <stl-vector name="op_history">
            <pointer>
                <enum base-type='int16_t' name="job_type" type-name='job_type'/>

                <compound name='info' is-union='true'>
                    <compound name='crutch'>
                        <int32_t name='item_type' refers-to='(enum-to-key $item_type $)'/>
                        <int32_t name='item_subtype' init-value='-1'/>
                        <int32_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
                        <int32_t name="mat_index" init-value='-1'/>
                        <int32_t name="item_id" ref-target='item'/>
                    </compound>

                    <int32_t name='bed_id' ref-target='building'/>

                    <compound name='bandage'>
                        <int32_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
                        <int32_t name="mat_index" init-value='-1'/>

                        <int32_t name="body_part_id" init-value='-1'/>
                        <int32_t name="item_id" ref-target='item'/>
                    </compound>
                </compound>

                <int32_t name="year"/>
                <int32_t name="year_time"/>

                <int32_t name="doctor_id" ref-target='unit'/>
            </pointer>
        </stl-vector>

        <stl-vector name="unk_34"/>
    </struct-type>

    <struct-type type-name='unit_soul'>
        <int32_t name='unit_id' ref-target='unit'/>

        <compound name='name' type-name='language_name'/>

        <uint32_t name='race' ref-target='creature_raw'/>
        <int8_t name='sex' comment='-1 n/a, 0 female, 1 male'/>
        <uint16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
            (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <int32_t name='unk1'/>
        <int32_t name='unk2'/>
        <int32_t name='unk3'/>
        <int32_t name='unk4'/>

        <int32_t comment='v0.34.01'/>
        <int32_t comment='v0.34.01'/>
        <int32_t comment='v0.34.01'/>
        <int32_t comment='v0.34.01'/>

        <static-array type-name='unit_attribute' name='mental_attrs' count='13' index-enum='mental_attribute_type'/>

        <stl-vector name='skills'>
            <pointer type-name='unit_skill'/>
        </stl-vector>
        <stl-vector name='preferences'>
            <pointer type-name='unit_preference'/>
        </stl-vector>

        <static-array type-name='uint16_t' name='traits' count='30' index-enum='personality_facet_type'/>

        <stl-vector name='unk5'>
            <pointer>
                <int16_t name='unk1'/>
                <int16_t name='unk2'/>
            </pointer>
        </stl-vector>

        <stl-vector name='unk6'/>
    </struct-type>

    <struct-type type-name='unit_skill'>
        <enum base-type='int16_t' name="id" type-name='job_skill'/>

        <code-helper name='describe'>$.id</code-helper>

        <enum base-type='int32_t' name="rating" type-name='skill_rating'/>
        <int32_t name="experience"/>
        <int32_t name="unused_counter"/>
        <int32_t name="rusty"/>
        <int32_t name="rust_counter"/>
        <int32_t name="demotion_counter"/>
        <int32_t name="unk_1c"/>
    </struct-type>

    <struct-type type-name='unit_preference'>
        <enum base-type='int16_t' name="type">
            <enum-item name='LikeMaterial'/>
            <enum-item name='LikeCreature'/>
            <enum-item name='LikeFood'/>
            <enum-item name='HateCreature'/>
            <enum-item name='LikeItem'/>
            <enum-item name='LikePlant'/>
            <enum-item name='LikeTree' comment='holdover from 40d and earlier'/>
            <enum-item name='LikeColor'/>
            <enum-item name='LikeShape'/>
        </enum>

        <code-helper name='describe'>$.type</code-helper>

        <compound is-union='true'>
            <enum base-type='int16_t' name="item_type" type-name='item_type'/>
            <int16_t name='creature_id' ref-target='creature_raw'/>
            <int16_t name='color_id' ref-target='descriptor_color'/>
            <int16_t name='shape_id' ref-target='descriptor_shape'/>
            <int16_t name='plant_id' ref-target='plant_raw'/>
        </compound>

        <int16_t name="item_subtype" refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <int16_t name='mattype' ref-target='material' aux-value='$$.matindex'/>
        <int32_t name='matindex'/>

        <bool name='active'/>

        <uint32_t name='prefstring_seed' comment='feeds into a simple RNG to choose which prefstring to use'/>
    </struct-type>

    <struct-type type-name='unit_chunk'
                 instance-vector='$global.world.unit_chunks' key-field='id'>
        <int32_t name='id' comment='unit_*.dat'/>
        <static-array name='units' count='100'>
            <stl-vector name='items' pointer-type='item'/>
            <pointer name='unit' type-name='unit'/>
        </static-array>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
